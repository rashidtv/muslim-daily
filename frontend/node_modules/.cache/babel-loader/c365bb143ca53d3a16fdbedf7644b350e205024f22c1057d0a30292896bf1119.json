{"ast":null,"code":"import _objectSpread from\"C:/Users/Rashid/muslim-daily/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const PracticeContext=/*#__PURE__*/createContext();export const usePractice=()=>{const context=useContext(PracticeContext);if(!context){throw new Error('usePractice must be used within a PracticeProvider');}return context;};export const PracticeProvider=_ref=>{let{children}=_ref;const[practices,setPractices]=useState({});const[streak,setStreak]=useState(0);const[todayStats,setTodayStats]=useState({prayersCompleted:0,totalPrayers:5,progress:0});// Load practices from localStorage on app start\nuseEffect(()=>{const savedPractices=localStorage.getItem('muslimDaily_practices');const savedStreak=localStorage.getItem('muslimDaily_streak');if(savedPractices){setPractices(JSON.parse(savedPractices));}if(savedStreak){setStreak(parseInt(savedStreak));}updateTodayStats();},[]);// Update today's stats whenever practices change\nuseEffect(()=>{updateTodayStats();saveToLocalStorage();},[practices]);const updateTodayStats=()=>{const today=new Date().toDateString();const todayPractices=practices[today]||{};const prayerKeys=['fajr','dhuhr','asr','maghrib','isha'];const prayersCompleted=prayerKeys.filter(key=>todayPractices[key]).length;const progress=prayersCompleted/5*100;setTodayStats({prayersCompleted,totalPrayers:5,progress});// Update streak\nupdateStreak(todayPractices,today);};const updateStreak=(todayPractices,today)=>{const prayerKeys=['fajr','dhuhr','asr','maghrib','isha'];const todayCompleted=prayerKeys.filter(key=>todayPractices[key]).length;if(todayCompleted===5){// Check if yesterday was also completed\nconst yesterday=new Date();yesterday.setDate(yesterday.getDate()-1);const yesterdayKey=yesterday.toDateString();const yesterdayPractices=practices[yesterdayKey]||{};const yesterdayCompleted=prayerKeys.filter(key=>yesterdayPractices[key]).length;if(yesterdayCompleted===5){setStreak(prev=>prev+1);}else{setStreak(1);}}};const saveToLocalStorage=()=>{localStorage.setItem('muslimDaily_practices',JSON.stringify(practices));localStorage.setItem('muslimDaily_streak',streak.toString());};const markPracticeCompleted=function(practiceType){let timestamp=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Date();const dateKey=timestamp.toDateString();setPractices(prev=>_objectSpread(_objectSpread({},prev),{},{[dateKey]:_objectSpread(_objectSpread({},prev[dateKey]),{},{[practiceType]:{completed:true,timestamp:timestamp.toISOString(),type:practiceType}})}));};const markPracticeIncomplete=function(practiceType){let timestamp=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Date();const dateKey=timestamp.toDateString();setPractices(prev=>{const updated=_objectSpread({},prev);if(updated[dateKey]&&updated[dateKey][practiceType]){delete updated[dateKey][practiceType];}return updated;});};const isPracticeCompleted=function(practiceType){var _practices$dateKey,_practices$dateKey$pr;let date=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Date();const dateKey=date.toDateString();return!!((_practices$dateKey=practices[dateKey])!==null&&_practices$dateKey!==void 0&&(_practices$dateKey$pr=_practices$dateKey[practiceType])!==null&&_practices$dateKey$pr!==void 0&&_practices$dateKey$pr.completed);};const getTodayPractices=()=>{const today=new Date().toDateString();return practices[today]||{};};const getWeeklyProgress=()=>{const weekData=[];const today=new Date();for(let i=6;i>=0;i--){const date=new Date(today);date.setDate(date.getDate()-i);const dateKey=date.toDateString();const dayPractices=practices[dateKey]||{};const prayerKeys=['fajr','dhuhr','asr','maghrib','isha'];const completed=prayerKeys.filter(key=>dayPractices[key]).length;weekData.push({date:dateKey,day:date.toLocaleDateString('en-US',{weekday:'short'}),completed,total:5});}return weekData;};const value={practices,streak,todayStats,markPracticeCompleted,markPracticeIncomplete,isPracticeCompleted,getTodayPractices,getWeeklyProgress};return/*#__PURE__*/_jsx(PracticeContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","PracticeContext","usePractice","context","Error","PracticeProvider","_ref","children","practices","setPractices","streak","setStreak","todayStats","setTodayStats","prayersCompleted","totalPrayers","progress","savedPractices","localStorage","getItem","savedStreak","JSON","parse","parseInt","updateTodayStats","saveToLocalStorage","today","Date","toDateString","todayPractices","prayerKeys","filter","key","length","updateStreak","todayCompleted","yesterday","setDate","getDate","yesterdayKey","yesterdayPractices","yesterdayCompleted","prev","setItem","stringify","toString","markPracticeCompleted","practiceType","timestamp","arguments","undefined","dateKey","_objectSpread","completed","toISOString","type","markPracticeIncomplete","updated","isPracticeCompleted","_practices$dateKey","_practices$dateKey$pr","date","getTodayPractices","getWeeklyProgress","weekData","i","dayPractices","push","day","toLocaleDateString","weekday","total","value","Provider"],"sources":["C:/Users/Rashid/muslim-daily/frontend/src/context/PracticeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst PracticeContext = createContext();\r\n\r\nexport const usePractice = () => {\r\n  const context = useContext(PracticeContext);\r\n  if (!context) {\r\n    throw new Error('usePractice must be used within a PracticeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const PracticeProvider = ({ children }) => {\r\n  const [practices, setPractices] = useState({});\r\n  const [streak, setStreak] = useState(0);\r\n  const [todayStats, setTodayStats] = useState({\r\n    prayersCompleted: 0,\r\n    totalPrayers: 5,\r\n    progress: 0\r\n  });\r\n\r\n  // Load practices from localStorage on app start\r\n  useEffect(() => {\r\n    const savedPractices = localStorage.getItem('muslimDaily_practices');\r\n    const savedStreak = localStorage.getItem('muslimDaily_streak');\r\n    \r\n    if (savedPractices) {\r\n      setPractices(JSON.parse(savedPractices));\r\n    }\r\n    \r\n    if (savedStreak) {\r\n      setStreak(parseInt(savedStreak));\r\n    }\r\n    \r\n    updateTodayStats();\r\n  }, []);\r\n\r\n  // Update today's stats whenever practices change\r\n  useEffect(() => {\r\n    updateTodayStats();\r\n    saveToLocalStorage();\r\n  }, [practices]);\r\n\r\n  const updateTodayStats = () => {\r\n    const today = new Date().toDateString();\r\n    const todayPractices = practices[today] || {};\r\n    const prayerKeys = ['fajr', 'dhuhr', 'asr', 'maghrib', 'isha'];\r\n    \r\n    const prayersCompleted = prayerKeys.filter(key => todayPractices[key]).length;\r\n    const progress = (prayersCompleted / 5) * 100;\r\n    \r\n    setTodayStats({\r\n      prayersCompleted,\r\n      totalPrayers: 5,\r\n      progress\r\n    });\r\n\r\n    // Update streak\r\n    updateStreak(todayPractices, today);\r\n  };\r\n\r\n  const updateStreak = (todayPractices, today) => {\r\n    const prayerKeys = ['fajr', 'dhuhr', 'asr', 'maghrib', 'isha'];\r\n    const todayCompleted = prayerKeys.filter(key => todayPractices[key]).length;\r\n    \r\n    if (todayCompleted === 5) {\r\n      // Check if yesterday was also completed\r\n      const yesterday = new Date();\r\n      yesterday.setDate(yesterday.getDate() - 1);\r\n      const yesterdayKey = yesterday.toDateString();\r\n      const yesterdayPractices = practices[yesterdayKey] || {};\r\n      const yesterdayCompleted = prayerKeys.filter(key => yesterdayPractices[key]).length;\r\n      \r\n      if (yesterdayCompleted === 5) {\r\n        setStreak(prev => prev + 1);\r\n      } else {\r\n        setStreak(1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveToLocalStorage = () => {\r\n    localStorage.setItem('muslimDaily_practices', JSON.stringify(practices));\r\n    localStorage.setItem('muslimDaily_streak', streak.toString());\r\n  };\r\n\r\n  const markPracticeCompleted = (practiceType, timestamp = new Date()) => {\r\n    const dateKey = timestamp.toDateString();\r\n    \r\n    setPractices(prev => ({\r\n      ...prev,\r\n      [dateKey]: {\r\n        ...prev[dateKey],\r\n        [practiceType]: {\r\n          completed: true,\r\n          timestamp: timestamp.toISOString(),\r\n          type: practiceType\r\n        }\r\n      }\r\n    }));\r\n  };\r\n\r\n  const markPracticeIncomplete = (practiceType, timestamp = new Date()) => {\r\n    const dateKey = timestamp.toDateString();\r\n    \r\n    setPractices(prev => {\r\n      const updated = { ...prev };\r\n      if (updated[dateKey] && updated[dateKey][practiceType]) {\r\n        delete updated[dateKey][practiceType];\r\n      }\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const isPracticeCompleted = (practiceType, date = new Date()) => {\r\n    const dateKey = date.toDateString();\r\n    return !!practices[dateKey]?.[practiceType]?.completed;\r\n  };\r\n\r\n  const getTodayPractices = () => {\r\n    const today = new Date().toDateString();\r\n    return practices[today] || {};\r\n  };\r\n\r\n  const getWeeklyProgress = () => {\r\n    const weekData = [];\r\n    const today = new Date();\r\n    \r\n    for (let i = 6; i >= 0; i--) {\r\n      const date = new Date(today);\r\n      date.setDate(date.getDate() - i);\r\n      const dateKey = date.toDateString();\r\n      const dayPractices = practices[dateKey] || {};\r\n      const prayerKeys = ['fajr', 'dhuhr', 'asr', 'maghrib', 'isha'];\r\n      const completed = prayerKeys.filter(key => dayPractices[key]).length;\r\n      \r\n      weekData.push({\r\n        date: dateKey,\r\n        day: date.toLocaleDateString('en-US', { weekday: 'short' }),\r\n        completed,\r\n        total: 5\r\n      });\r\n    }\r\n    \r\n    return weekData;\r\n  };\r\n\r\n  const value = {\r\n    practices,\r\n    streak,\r\n    todayStats,\r\n    markPracticeCompleted,\r\n    markPracticeIncomplete,\r\n    isPracticeCompleted,\r\n    getTodayPractices,\r\n    getWeeklyProgress\r\n  };\r\n\r\n  return (\r\n    <PracticeContext.Provider value={value}>\r\n      {children}\r\n    </PracticeContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}