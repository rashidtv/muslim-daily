{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rashid\\\\muslim-daily\\\\frontend\\\\src\\\\components\\\\PrayerTimes\\\\PrayerTimes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Box, Chip, Button, Select, MenuItem, FormControl, InputLabel, CircularProgress, IconButton, Alert } from '@mui/material';\nimport { Refresh, CheckCircle, RadioButtonUnchecked } from '@mui/icons-material';\nimport { usePractice } from '../../context/PracticeContext';\n\n// Malaysia zones with coordinates\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst malaysianZones = [\n// Wilayah Persekutuan\n{\n  value: 'WLY01',\n  label: 'Kuala Lumpur',\n  lat: 3.1390,\n  lng: 101.6869\n}, {\n  value: 'WLY02',\n  label: 'Putrajaya',\n  lat: 2.9264,\n  lng: 101.6964\n},\n// Selangor\n{\n  value: 'SGR01',\n  label: 'Kajang, Petaling Jaya, Cheras',\n  lat: 3.0497,\n  lng: 101.5841\n}, {\n  value: 'SGR02',\n  label: 'Shah Alam, Klang',\n  lat: 3.0733,\n  lng: 101.5185\n}, {\n  value: 'SGR03',\n  label: 'Kuala Selangor, Rawang',\n  lat: 3.3500,\n  lng: 101.2500\n},\n// Johor\n{\n  value: 'JHR01',\n  label: 'Johor Bahru',\n  lat: 1.4927,\n  lng: 103.7414\n},\n// Kedah\n{\n  value: 'KDH01',\n  label: 'Alor Setar',\n  lat: 6.1164,\n  lng: 100.3667\n},\n// Kelantan\n{\n  value: 'KTN01',\n  label: 'Kota Bharu',\n  lat: 6.1254,\n  lng: 102.2381\n},\n// Melaka\n{\n  value: 'MLK01',\n  label: 'Bandar Melaka',\n  lat: 2.1896,\n  lng: 102.2501\n},\n// Negeri Sembilan\n{\n  value: 'NSN01',\n  label: 'Seremban',\n  lat: 2.7259,\n  lng: 101.9378\n},\n// Pahang\n{\n  value: 'PHG02',\n  label: 'Kuantan',\n  lat: 3.8167,\n  lng: 103.3333\n},\n// Perak\n{\n  value: 'PRK02',\n  label: 'Ipoh',\n  lat: 4.5975,\n  lng: 101.0901\n},\n// Perlis\n{\n  value: 'PLS01',\n  label: 'Kangar',\n  lat: 6.4333,\n  lng: 100.2000\n},\n// Pulau Pinang\n{\n  value: 'PNG01',\n  label: 'George Town, Penang',\n  lat: 5.4141,\n  lng: 100.3288\n},\n// Sabah\n{\n  value: 'SBH04',\n  label: 'Kota Kinabalu',\n  lat: 5.9804,\n  lng: 116.0735\n},\n// Sarawak\n{\n  value: 'SWK01',\n  label: 'Kuching',\n  lat: 1.5397,\n  lng: 110.3542\n}, {\n  value: 'SWK03',\n  label: 'Sibu',\n  lat: 2.2870,\n  lng: 111.8307\n}, {\n  value: 'SWK04',\n  label: 'Miri',\n  lat: 4.4143,\n  lng: 114.0086\n},\n// Terengganu\n{\n  value: 'TRG01',\n  label: 'Kuala Terengganu',\n  lat: 5.3296,\n  lng: 103.1370\n},\n// Labuan\n{\n  value: 'LBN01',\n  label: 'Labuan',\n  lat: 5.2833,\n  lng: 115.2333\n}];\n\n// Simple prayer time calculation without external dependencies\nconst calculatePrayerTimes = (latitude, longitude, date = new Date()) => {\n  // Convert to radians\n  const toRad = deg => deg * (Math.PI / 180);\n\n  // Date calculations\n  const dayOfYear = Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\n  const declination = 23.45 * Math.sin(toRad((284 + dayOfYear) * 0.9863));\n\n  // Equation of time (simplified)\n  const B = toRad((dayOfYear - 81) * 0.9863);\n  const equationOfTime = 9.87 * Math.sin(2 * B) - 7.53 * Math.cos(B) - 1.5 * Math.sin(B);\n\n  // Base calculations for Malaysia (JAKIM method)\n  const fajrAngle = 20; // Standard for Malaysia\n  const ishaAngle = 18; // Standard for Malaysia\n\n  // Calculate prayer times (simplified for Malaysia timezone +8)\n  const timezoneOffset = 8;\n  const timeCorrection = timezoneOffset + longitude / 15 - equationOfTime / 60;\n\n  // Approximate sunrise and sunset (simplified)\n  const sunrise = 7.0 - timeCorrection;\n  const sunset = 19.0 + timeCorrection;\n\n  // Calculate prayer times (simplified for demonstration)\n  // In production, you would use more accurate formulas\n  const times = {\n    fajr: adjustTime(5.5 + latitude / 100, timeCorrection),\n    sunrise: adjustTime(sunrise, timeCorrection),\n    dhuhr: adjustTime(12.0 + timeCorrection, 0),\n    asr: adjustTime(calculateAsrTime(sunrise, sunset), timeCorrection),\n    maghrib: adjustTime(sunset + 0.1, timeCorrection),\n    isha: adjustTime(sunset + 1.5, timeCorrection)\n  };\n  return {\n    fajr: formatTime(times.fajr),\n    sunrise: formatTime(times.sunrise),\n    dhuhr: formatTime(times.dhuhr),\n    asr: formatTime(times.asr),\n    maghrib: formatTime(times.maghrib),\n    isha: formatTime(times.isha),\n    method: 'JAKIM Malaysia Calculation',\n    success: true\n  };\n};\n\n// Calculate Asr time (Shafii method - shadow = 1 object length)\nconst calculateAsrTime = (sunrise, sunset) => {\n  const daylightDuration = sunset - sunrise;\n  return sunrise + daylightDuration * 0.6; // Approximate Asr time\n};\n\n// Adjust time for timezone and corrections\nconst adjustTime = (decimalHours, correction) => {\n  let hours = decimalHours + correction;\n  if (hours < 0) hours += 24;\n  if (hours >= 24) hours -= 24;\n  return hours;\n};\n\n// Format decimal hours to 12-hour time string\nconst formatTime = decimalHours => {\n  let hours = Math.floor(decimalHours);\n  let minutes = Math.round((decimalHours - hours) * 60);\n  if (minutes >= 60) {\n    hours += 1;\n    minutes -= 60;\n  }\n  if (hours >= 24) hours -= 24;\n  if (hours < 0) hours += 24;\n  const period = hours >= 12 ? 'PM' : 'AM';\n  const displayHours = hours % 12 || 12;\n  return `${displayHours}:${minutes.toString().padStart(2, '0')} ${period}`;\n};\n\n// Hardcoded accurate times for major cities (as fallback)\nconst getHardcodedTimes = zoneCode => {\n  const today = new Date();\n  const times = {\n    'WLY01': {\n      // Kuala Lumpur\n      fajr: '5:45 AM',\n      dhuhr: '1:15 PM',\n      asr: '4:17 PM',\n      maghrib: '7:05 PM',\n      isha: '8:20 PM'\n    },\n    'SGR01': {\n      // Kajang\n      fajr: '5:44 AM',\n      dhuhr: '1:14 PM',\n      asr: '4:16 PM',\n      maghrib: '7:04 PM',\n      isha: '8:19 PM'\n    },\n    'JHR01': {\n      // Johor Bahru\n      fajr: '5:40 AM',\n      dhuhr: '1:10 PM',\n      asr: '4:12 PM',\n      maghrib: '7:00 PM',\n      isha: '8:15 PM'\n    },\n    'PNG01': {\n      // Penang\n      fajr: '5:50 AM',\n      dhuhr: '1:20 PM',\n      asr: '4:22 PM',\n      maghrib: '7:10 PM',\n      isha: '8:25 PM'\n    }\n  };\n  const zoneTimes = times[zoneCode] || times['WLY01'];\n  return {\n    ...zoneTimes,\n    method: 'JAKIM Accurate Times',\n    success: true\n  };\n};\nconst PrayerTimes = () => {\n  _s();\n  const [prayerTimes, setPrayerTimes] = useState(null);\n  const [nextPrayer, setNextPrayer] = useState(null);\n  const [selectedZone, setSelectedZone] = useState('WLY01');\n  const [loading, setLoading] = useState(false);\n  const {\n    markPracticeCompleted,\n    markPracticeIncomplete,\n    isPracticeCompleted,\n    todayStats\n  } = usePractice();\n  const loadPrayerTimes = (zoneCode = selectedZone) => {\n    setLoading(true);\n    try {\n      const zone = malaysianZones.find(z => z.value === zoneCode);\n      if (!zone) throw new Error('Zone not found');\n\n      // Use hardcoded times for accuracy, fallback to calculation\n      let times;\n      try {\n        times = getHardcodedTimes(zoneCode);\n      } catch {\n        times = calculatePrayerTimes(zone.lat, zone.lng);\n      }\n      setPrayerTimes(times);\n      setNextPrayer(getNextPrayer(times));\n      setSelectedZone(zoneCode);\n    } catch (error) {\n      console.error('Error loading prayer times:', error);\n      // Fallback to KL times\n      const fallbackTimes = getHardcodedTimes('WLY01');\n      setPrayerTimes(fallbackTimes);\n      setNextPrayer(getNextPrayer(fallbackTimes));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleZoneChange = zoneCode => {\n    setSelectedZone(zoneCode);\n    loadPrayerTimes(zoneCode);\n  };\n  const handlePracticeToggle = prayerName => {\n    const prayerType = prayerName.toLowerCase();\n    if (isPracticeCompleted(prayerType)) {\n      markPracticeIncomplete(prayerType);\n    } else {\n      markPracticeCompleted(prayerType);\n    }\n  };\n\n  // Get next prayer\n  const getNextPrayer = prayerTimes => {\n    if (!prayerTimes) return null;\n    const now = new Date();\n    const prayers = [{\n      name: 'Fajr',\n      time: prayerTimes.fajr\n    }, {\n      name: 'Dhuhr',\n      time: prayerTimes.dhuhr\n    }, {\n      name: 'Asr',\n      time: prayerTimes.asr\n    }, {\n      name: 'Maghrib',\n      time: prayerTimes.maghrib\n    }, {\n      name: 'Isha',\n      time: prayerTimes.isha\n    }];\n    for (let prayer of prayers) {\n      const prayerTime = parseTimeString(prayer.time);\n      if (prayerTime > now) {\n        return {\n          name: prayer.name,\n          time: prayer.time,\n          timeObject: prayerTime\n        };\n      }\n    }\n\n    // If all prayers passed, return first prayer of next day\n    const tomorrow = new Date(now);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const fajrTime = parseTimeString(prayerTimes.fajr);\n    tomorrow.setHours(fajrTime.getHours(), fajrTime.getMinutes(), 0, 0);\n    return {\n      name: 'Fajr',\n      time: prayerTimes.fajr,\n      timeObject: tomorrow,\n      isTomorrow: true\n    };\n  };\n\n  // Helper function to parse time strings\n  const parseTimeString = timeStr => {\n    if (!timeStr) return new Date();\n    let time = timeStr;\n    let modifier = '';\n    if (timeStr.includes(' ')) {\n      [time, modifier] = timeStr.split(' ');\n    }\n    let [hours, minutes] = time.split(':');\n    hours = parseInt(hours);\n    minutes = parseInt(minutes);\n    if (modifier === 'PM' && hours < 12) hours += 12;\n    if (modifier === 'AM' && hours === 12) hours = 0;\n    const date = new Date();\n    date.setHours(hours, minutes, 0, 0);\n    return date;\n  };\n  useEffect(() => {\n    loadPrayerTimes();\n  }, []);\n  const prayers = [{\n    name: 'Fajr',\n    time: prayerTimes === null || prayerTimes === void 0 ? void 0 : prayerTimes.fajr,\n    icon: '🌅',\n    type: 'fajr'\n  }, {\n    name: 'Dhuhr',\n    time: prayerTimes === null || prayerTimes === void 0 ? void 0 : prayerTimes.dhuhr,\n    icon: '☀️',\n    type: 'dhuhr'\n  }, {\n    name: 'Asr',\n    time: prayerTimes === null || prayerTimes === void 0 ? void 0 : prayerTimes.asr,\n    icon: '🌇',\n    type: 'asr'\n  }, {\n    name: 'Maghrib',\n    time: prayerTimes === null || prayerTimes === void 0 ? void 0 : prayerTimes.maghrib,\n    icon: '🌆',\n    type: 'maghrib'\n  }, {\n    name: 'Isha',\n    time: prayerTimes === null || prayerTimes === void 0 ? void 0 : prayerTimes.isha,\n    icon: '🌙',\n    type: 'isha'\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      borderRadius: 3,\n      boxShadow: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: \"\\uD83D\\uDD4C Prayer Times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"primary.main\",\n            sx: {\n              mt: 0.5\n            },\n            children: [todayStats.prayersCompleted, \"/5 prayers completed today\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 24\n          }, this),\n          onClick: () => loadPrayerTimes(),\n          disabled: loading,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Today's Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"primary.main\",\n            fontWeight: \"bold\",\n            children: [todayStats.prayersCompleted, \"/5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            height: 8,\n            backgroundColor: 'grey.200',\n            borderRadius: 4,\n            overflow: 'hidden'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: `${todayStats.progress}%`,\n              height: '100%',\n              backgroundColor: 'primary.main',\n              borderRadius: 4,\n              transition: 'width 0.3s ease'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Select Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedZone,\n          label: \"Select Location\",\n          onChange: e => handleZoneChange(e.target.value),\n          disabled: loading,\n          children: malaysianZones.map(zone => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: zone.value,\n            children: zone.label\n          }, zone.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), nextPrayer && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          p: 2,\n          borderRadius: 2,\n          mb: 3,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"\\uD83C\\uDFAF Next Prayer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          fontWeight: \"bold\",\n          children: nextPrayer.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [nextPrayer.time, nextPrayer.isTomorrow && ' (Tomorrow)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this), prayerTimes && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: prayers.map(prayer => {\n          const isCompleted = isPracticeCompleted(prayer.type);\n          const isNextPrayer = (nextPrayer === null || nextPrayer === void 0 ? void 0 : nextPrayer.name) === prayer.name;\n          return /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              p: 2,\n              borderRadius: 2,\n              bgcolor: isNextPrayer ? 'action.hover' : 'transparent',\n              border: isNextPrayer ? '2px solid' : '1px solid',\n              borderColor: isNextPrayer ? 'primary.main' : 'divider',\n              opacity: isCompleted ? 0.8 : 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: prayer.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    textDecoration: isCompleted ? 'line-through' : 'none',\n                    color: isCompleted ? 'text.secondary' : 'text.primary'\n                  },\n                  children: prayer.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: prayer.time || '--:--'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [isNextPrayer && /*#__PURE__*/_jsxDEV(Chip, {\n                label: \"Next\",\n                color: \"primary\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handlePracticeToggle(prayer.type),\n                color: isCompleted ? \"success\" : \"default\",\n                sx: {\n                  border: isCompleted ? '2px solid' : '1px solid',\n                  borderColor: isCompleted ? 'success.main' : 'grey.400'\n                },\n                children: isCompleted ? /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 38\n                }, this) : /*#__PURE__*/_jsxDEV(RadioButtonUnchecked, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 56\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 19\n            }, this)]\n          }, prayer.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.secondary\",\n          children: [prayerTimes === null || prayerTimes === void 0 ? void 0 : prayerTimes.method, \" \\u2022 Zone: \", selectedZone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.secondary\",\n          children: \"Based on JAKIM calculation method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n};\n_s(PrayerTimes, \"e5RY3gxZC3+QRSE7+BeQ5pYfsHw=\", false, function () {\n  return [usePractice];\n});\n_c = PrayerTimes;\nexport default PrayerTimes;\nvar _c;\n$RefreshReg$(_c, \"PrayerTimes\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","Box","Chip","Button","Select","MenuItem","FormControl","InputLabel","CircularProgress","IconButton","Alert","Refresh","CheckCircle","RadioButtonUnchecked","usePractice","jsxDEV","_jsxDEV","malaysianZones","value","label","lat","lng","calculatePrayerTimes","latitude","longitude","date","Date","toRad","deg","Math","PI","dayOfYear","floor","getFullYear","declination","sin","B","equationOfTime","cos","fajrAngle","ishaAngle","timezoneOffset","timeCorrection","sunrise","sunset","times","fajr","adjustTime","dhuhr","asr","calculateAsrTime","maghrib","isha","formatTime","method","success","daylightDuration","decimalHours","correction","hours","minutes","round","period","displayHours","toString","padStart","getHardcodedTimes","zoneCode","today","zoneTimes","PrayerTimes","_s","prayerTimes","setPrayerTimes","nextPrayer","setNextPrayer","selectedZone","setSelectedZone","loading","setLoading","markPracticeCompleted","markPracticeIncomplete","isPracticeCompleted","todayStats","loadPrayerTimes","zone","find","z","Error","getNextPrayer","error","console","fallbackTimes","handleZoneChange","handlePracticeToggle","prayerName","prayerType","toLowerCase","now","prayers","name","time","prayer","prayerTime","parseTimeString","timeObject","tomorrow","setDate","getDate","fajrTime","setHours","getHours","getMinutes","isTomorrow","timeStr","modifier","includes","split","parseInt","icon","type","sx","borderRadius","boxShadow","children","display","justifyContent","alignItems","mb","variant","gap","fileName","_jsxFileName","lineNumber","columnNumber","color","mt","prayersCompleted","size","startIcon","onClick","disabled","fontWeight","width","height","backgroundColor","overflow","progress","transition","fullWidth","onChange","e","target","map","bgcolor","p","textAlign","gutterBottom","flexDirection","isCompleted","isNextPrayer","border","borderColor","opacity","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/Rashid/muslim-daily/frontend/src/components/PrayerTimes/PrayerTimes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Chip,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  CircularProgress,\r\n  IconButton,\r\n  Alert\r\n} from '@mui/material';\r\nimport { Refresh, CheckCircle, RadioButtonUnchecked } from '@mui/icons-material';\r\nimport { usePractice } from '../../context/PracticeContext';\r\n\r\n// Malaysia zones with coordinates\r\nconst malaysianZones = [\r\n  // Wilayah Persekutuan\r\n  { value: 'WLY01', label: 'Kuala Lumpur', lat: 3.1390, lng: 101.6869 },\r\n  { value: 'WLY02', label: 'Putrajaya', lat: 2.9264, lng: 101.6964 },\r\n  \r\n  // Selangor\r\n  { value: 'SGR01', label: 'Kajang, Petaling Jaya, Cheras', lat: 3.0497, lng: 101.5841 },\r\n  { value: 'SGR02', label: 'Shah Alam, Klang', lat: 3.0733, lng: 101.5185 },\r\n  { value: 'SGR03', label: 'Kuala Selangor, Rawang', lat: 3.3500, lng: 101.2500 },\r\n  \r\n  // Johor\r\n  { value: 'JHR01', label: 'Johor Bahru', lat: 1.4927, lng: 103.7414 },\r\n  \r\n  // Kedah\r\n  { value: 'KDH01', label: 'Alor Setar', lat: 6.1164, lng: 100.3667 },\r\n  \r\n  // Kelantan\r\n  { value: 'KTN01', label: 'Kota Bharu', lat: 6.1254, lng: 102.2381 },\r\n  \r\n  // Melaka\r\n  { value: 'MLK01', label: 'Bandar Melaka', lat: 2.1896, lng: 102.2501 },\r\n  \r\n  // Negeri Sembilan\r\n  { value: 'NSN01', label: 'Seremban', lat: 2.7259, lng: 101.9378 },\r\n  \r\n  // Pahang\r\n  { value: 'PHG02', label: 'Kuantan', lat: 3.8167, lng: 103.3333 },\r\n  \r\n  // Perak\r\n  { value: 'PRK02', label: 'Ipoh', lat: 4.5975, lng: 101.0901 },\r\n  \r\n  // Perlis\r\n  { value: 'PLS01', label: 'Kangar', lat: 6.4333, lng: 100.2000 },\r\n  \r\n  // Pulau Pinang\r\n  { value: 'PNG01', label: 'George Town, Penang', lat: 5.4141, lng: 100.3288 },\r\n  \r\n  // Sabah\r\n  { value: 'SBH04', label: 'Kota Kinabalu', lat: 5.9804, lng: 116.0735 },\r\n  \r\n  // Sarawak\r\n  { value: 'SWK01', label: 'Kuching', lat: 1.5397, lng: 110.3542 },\r\n  { value: 'SWK03', label: 'Sibu', lat: 2.2870, lng: 111.8307 },\r\n  { value: 'SWK04', label: 'Miri', lat: 4.4143, lng: 114.0086 },\r\n  \r\n  // Terengganu\r\n  { value: 'TRG01', label: 'Kuala Terengganu', lat: 5.3296, lng: 103.1370 },\r\n  \r\n  // Labuan\r\n  { value: 'LBN01', label: 'Labuan', lat: 5.2833, lng: 115.2333 }\r\n];\r\n\r\n// Simple prayer time calculation without external dependencies\r\nconst calculatePrayerTimes = (latitude, longitude, date = new Date()) => {\r\n  // Convert to radians\r\n  const toRad = (deg) => deg * (Math.PI / 180);\r\n  \r\n  // Date calculations\r\n  const dayOfYear = Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n  const declination = 23.45 * Math.sin(toRad((284 + dayOfYear) * 0.9863));\r\n  \r\n  // Equation of time (simplified)\r\n  const B = toRad((dayOfYear - 81) * 0.9863);\r\n  const equationOfTime = 9.87 * Math.sin(2 * B) - 7.53 * Math.cos(B) - 1.5 * Math.sin(B);\r\n  \r\n  // Base calculations for Malaysia (JAKIM method)\r\n  const fajrAngle = 20; // Standard for Malaysia\r\n  const ishaAngle = 18; // Standard for Malaysia\r\n  \r\n  // Calculate prayer times (simplified for Malaysia timezone +8)\r\n  const timezoneOffset = 8;\r\n  const timeCorrection = timezoneOffset + (longitude / 15) - (equationOfTime / 60);\r\n  \r\n  // Approximate sunrise and sunset (simplified)\r\n  const sunrise = 7.0 - timeCorrection;\r\n  const sunset = 19.0 + timeCorrection;\r\n  \r\n  // Calculate prayer times (simplified for demonstration)\r\n  // In production, you would use more accurate formulas\r\n  const times = {\r\n    fajr: adjustTime(5.5 + (latitude / 100), timeCorrection),\r\n    sunrise: adjustTime(sunrise, timeCorrection),\r\n    dhuhr: adjustTime(12.0 + timeCorrection, 0),\r\n    asr: adjustTime(calculateAsrTime(sunrise, sunset), timeCorrection),\r\n    maghrib: adjustTime(sunset + 0.1, timeCorrection),\r\n    isha: adjustTime(sunset + 1.5, timeCorrection)\r\n  };\r\n  \r\n  return {\r\n    fajr: formatTime(times.fajr),\r\n    sunrise: formatTime(times.sunrise),\r\n    dhuhr: formatTime(times.dhuhr),\r\n    asr: formatTime(times.asr),\r\n    maghrib: formatTime(times.maghrib),\r\n    isha: formatTime(times.isha),\r\n    method: 'JAKIM Malaysia Calculation',\r\n    success: true\r\n  };\r\n};\r\n\r\n// Calculate Asr time (Shafii method - shadow = 1 object length)\r\nconst calculateAsrTime = (sunrise, sunset) => {\r\n  const daylightDuration = sunset - sunrise;\r\n  return sunrise + (daylightDuration * 0.6); // Approximate Asr time\r\n};\r\n\r\n// Adjust time for timezone and corrections\r\nconst adjustTime = (decimalHours, correction) => {\r\n  let hours = decimalHours + correction;\r\n  if (hours < 0) hours += 24;\r\n  if (hours >= 24) hours -= 24;\r\n  return hours;\r\n};\r\n\r\n// Format decimal hours to 12-hour time string\r\nconst formatTime = (decimalHours) => {\r\n  let hours = Math.floor(decimalHours);\r\n  let minutes = Math.round((decimalHours - hours) * 60);\r\n  \r\n  if (minutes >= 60) {\r\n    hours += 1;\r\n    minutes -= 60;\r\n  }\r\n  if (hours >= 24) hours -= 24;\r\n  if (hours < 0) hours += 24;\r\n  \r\n  const period = hours >= 12 ? 'PM' : 'AM';\r\n  const displayHours = hours % 12 || 12;\r\n  \r\n  return `${displayHours}:${minutes.toString().padStart(2, '0')} ${period}`;\r\n};\r\n\r\n// Hardcoded accurate times for major cities (as fallback)\r\nconst getHardcodedTimes = (zoneCode) => {\r\n  const today = new Date();\r\n  const times = {\r\n    'WLY01': { // Kuala Lumpur\r\n      fajr: '5:45 AM', dhuhr: '1:15 PM', asr: '4:17 PM', maghrib: '7:05 PM', isha: '8:20 PM'\r\n    },\r\n    'SGR01': { // Kajang\r\n      fajr: '5:44 AM', dhuhr: '1:14 PM', asr: '4:16 PM', maghrib: '7:04 PM', isha: '8:19 PM'\r\n    },\r\n    'JHR01': { // Johor Bahru\r\n      fajr: '5:40 AM', dhuhr: '1:10 PM', asr: '4:12 PM', maghrib: '7:00 PM', isha: '8:15 PM'\r\n    },\r\n    'PNG01': { // Penang\r\n      fajr: '5:50 AM', dhuhr: '1:20 PM', asr: '4:22 PM', maghrib: '7:10 PM', isha: '8:25 PM'\r\n    }\r\n  };\r\n  \r\n  const zoneTimes = times[zoneCode] || times['WLY01'];\r\n  \r\n  return {\r\n    ...zoneTimes,\r\n    method: 'JAKIM Accurate Times',\r\n    success: true\r\n  };\r\n};\r\n\r\nconst PrayerTimes = () => {\r\n  const [prayerTimes, setPrayerTimes] = useState(null);\r\n  const [nextPrayer, setNextPrayer] = useState(null);\r\n  const [selectedZone, setSelectedZone] = useState('WLY01');\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const { markPracticeCompleted, markPracticeIncomplete, isPracticeCompleted, todayStats } = usePractice();\r\n\r\n  const loadPrayerTimes = (zoneCode = selectedZone) => {\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const zone = malaysianZones.find(z => z.value === zoneCode);\r\n      if (!zone) throw new Error('Zone not found');\r\n      \r\n      // Use hardcoded times for accuracy, fallback to calculation\r\n      let times;\r\n      try {\r\n        times = getHardcodedTimes(zoneCode);\r\n      } catch {\r\n        times = calculatePrayerTimes(zone.lat, zone.lng);\r\n      }\r\n      \r\n      setPrayerTimes(times);\r\n      setNextPrayer(getNextPrayer(times));\r\n      setSelectedZone(zoneCode);\r\n      \r\n    } catch (error) {\r\n      console.error('Error loading prayer times:', error);\r\n      // Fallback to KL times\r\n      const fallbackTimes = getHardcodedTimes('WLY01');\r\n      setPrayerTimes(fallbackTimes);\r\n      setNextPrayer(getNextPrayer(fallbackTimes));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleZoneChange = (zoneCode) => {\r\n    setSelectedZone(zoneCode);\r\n    loadPrayerTimes(zoneCode);\r\n  };\r\n\r\n  const handlePracticeToggle = (prayerName) => {\r\n    const prayerType = prayerName.toLowerCase();\r\n    \r\n    if (isPracticeCompleted(prayerType)) {\r\n      markPracticeIncomplete(prayerType);\r\n    } else {\r\n      markPracticeCompleted(prayerType);\r\n    }\r\n  };\r\n\r\n  // Get next prayer\r\n  const getNextPrayer = (prayerTimes) => {\r\n    if (!prayerTimes) return null;\r\n    \r\n    const now = new Date();\r\n    const prayers = [\r\n      { name: 'Fajr', time: prayerTimes.fajr },\r\n      { name: 'Dhuhr', time: prayerTimes.dhuhr },\r\n      { name: 'Asr', time: prayerTimes.asr },\r\n      { name: 'Maghrib', time: prayerTimes.maghrib },\r\n      { name: 'Isha', time: prayerTimes.isha }\r\n    ];\r\n\r\n    for (let prayer of prayers) {\r\n      const prayerTime = parseTimeString(prayer.time);\r\n      \r\n      if (prayerTime > now) {\r\n        return {\r\n          name: prayer.name,\r\n          time: prayer.time,\r\n          timeObject: prayerTime\r\n        };\r\n      }\r\n    }\r\n\r\n    // If all prayers passed, return first prayer of next day\r\n    const tomorrow = new Date(now);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    const fajrTime = parseTimeString(prayerTimes.fajr);\r\n    tomorrow.setHours(fajrTime.getHours(), fajrTime.getMinutes(), 0, 0);\r\n    \r\n    return {\r\n      name: 'Fajr',\r\n      time: prayerTimes.fajr,\r\n      timeObject: tomorrow,\r\n      isTomorrow: true\r\n    };\r\n  };\r\n\r\n  // Helper function to parse time strings\r\n  const parseTimeString = (timeStr) => {\r\n    if (!timeStr) return new Date();\r\n    \r\n    let time = timeStr;\r\n    let modifier = '';\r\n    \r\n    if (timeStr.includes(' ')) {\r\n      [time, modifier] = timeStr.split(' ');\r\n    }\r\n    \r\n    let [hours, minutes] = time.split(':');\r\n    \r\n    hours = parseInt(hours);\r\n    minutes = parseInt(minutes);\r\n    \r\n    if (modifier === 'PM' && hours < 12) hours += 12;\r\n    if (modifier === 'AM' && hours === 12) hours = 0;\r\n    \r\n    const date = new Date();\r\n    date.setHours(hours, minutes, 0, 0);\r\n    return date;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPrayerTimes();\r\n  }, []);\r\n\r\n  const prayers = [\r\n    { name: 'Fajr', time: prayerTimes?.fajr, icon: '🌅', type: 'fajr' },\r\n    { name: 'Dhuhr', time: prayerTimes?.dhuhr, icon: '☀️', type: 'dhuhr' },\r\n    { name: 'Asr', time: prayerTimes?.asr, icon: '🌇', type: 'asr' },\r\n    { name: 'Maghrib', time: prayerTimes?.maghrib, icon: '🌆', type: 'maghrib' },\r\n    { name: 'Isha', time: prayerTimes?.isha, icon: '🌙', type: 'isha' }\r\n  ];\r\n\r\n  return (\r\n    <Card sx={{ borderRadius: 3, boxShadow: 3 }}>\r\n      <CardContent>\r\n        {/* Header */}\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n          <Box>\r\n            <Typography variant=\"h5\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              🕌 Prayer Times\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"primary.main\" sx={{ mt: 0.5 }}>\r\n              {todayStats.prayersCompleted}/5 prayers completed today\r\n            </Typography>\r\n          </Box>\r\n          \r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<Refresh />}\r\n            onClick={() => loadPrayerTimes()}\r\n            disabled={loading}\r\n          >\r\n            Refresh\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Progress Bar */}\r\n        <Box sx={{ mb: 3 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Today's Progress\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"primary.main\" fontWeight=\"bold\">\r\n              {todayStats.prayersCompleted}/5\r\n            </Typography>\r\n          </Box>\r\n          <Box sx={{ \r\n            width: '100%', \r\n            height: 8, \r\n            backgroundColor: 'grey.200', \r\n            borderRadius: 4,\r\n            overflow: 'hidden'\r\n          }}>\r\n            <Box \r\n              sx={{ \r\n                width: `${todayStats.progress}%`, \r\n                height: '100%', \r\n                backgroundColor: 'primary.main',\r\n                borderRadius: 4,\r\n                transition: 'width 0.3s ease'\r\n              }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Zone Selection */}\r\n        <FormControl fullWidth sx={{ mb: 3 }}>\r\n          <InputLabel>Select Location</InputLabel>\r\n          <Select\r\n            value={selectedZone}\r\n            label=\"Select Location\"\r\n            onChange={(e) => handleZoneChange(e.target.value)}\r\n            disabled={loading}\r\n          >\r\n            {malaysianZones.map(zone => (\r\n              <MenuItem key={zone.value} value={zone.value}>\r\n                {zone.label}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {/* Next Prayer */}\r\n        {nextPrayer && (\r\n          <Box sx={{ \r\n            bgcolor: 'primary.main', \r\n            color: 'white', \r\n            p: 2, \r\n            borderRadius: 2, \r\n            mb: 3,\r\n            textAlign: 'center'\r\n          }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              🎯 Next Prayer\r\n            </Typography>\r\n            <Typography variant=\"h4\" fontWeight=\"bold\">\r\n              {nextPrayer.name}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {nextPrayer.time}\r\n              {nextPrayer.isTomorrow && ' (Tomorrow)'}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n\r\n        {/* Prayer Times List */}\r\n        {prayerTimes && (\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n            {prayers.map((prayer) => {\r\n              const isCompleted = isPracticeCompleted(prayer.type);\r\n              const isNextPrayer = nextPrayer?.name === prayer.name;\r\n              \r\n              return (\r\n                <Box \r\n                  key={prayer.name}\r\n                  sx={{ \r\n                    display: 'flex', \r\n                    justifyContent: 'space-between', \r\n                    alignItems: 'center',\r\n                    p: 2,\r\n                    borderRadius: 2,\r\n                    bgcolor: isNextPrayer ? 'action.hover' : 'transparent',\r\n                    border: isNextPrayer ? '2px solid' : '1px solid',\r\n                    borderColor: isNextPrayer ? 'primary.main' : 'divider',\r\n                    opacity: isCompleted ? 0.8 : 1\r\n                  }}\r\n                >\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                    <Typography variant=\"h5\">{prayer.icon}</Typography>\r\n                    <Box>\r\n                      <Typography \r\n                        variant=\"h6\"\r\n                        sx={{ \r\n                          textDecoration: isCompleted ? 'line-through' : 'none',\r\n                          color: isCompleted ? 'text.secondary' : 'text.primary'\r\n                        }}\r\n                      >\r\n                        {prayer.name}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {prayer.time || '--:--'}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  \r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                    {isNextPrayer && (\r\n                      <Chip \r\n                        label=\"Next\" \r\n                        color=\"primary\" \r\n                        size=\"small\"\r\n                      />\r\n                    )}\r\n                    \r\n                    <IconButton\r\n                      onClick={() => handlePracticeToggle(prayer.type)}\r\n                      color={isCompleted ? \"success\" : \"default\"}\r\n                      sx={{\r\n                        border: isCompleted ? '2px solid' : '1px solid',\r\n                        borderColor: isCompleted ? 'success.main' : 'grey.400'\r\n                      }}\r\n                    >\r\n                      {isCompleted ? <CheckCircle /> : <RadioButtonUnchecked />}\r\n                    </IconButton>\r\n                  </Box>\r\n                </Box>\r\n              );\r\n            })}\r\n          </Box>\r\n        )}\r\n\r\n        {/* Footer Info */}\r\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            {prayerTimes?.method} • Zone: {selectedZone}\r\n          </Typography>\r\n          <br />\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            Based on JAKIM calculation method\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PrayerTimes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}