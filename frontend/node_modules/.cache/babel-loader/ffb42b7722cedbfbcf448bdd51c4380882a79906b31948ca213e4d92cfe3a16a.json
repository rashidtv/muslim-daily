{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Card,CardContent,Typography,Box,Chip,Button,Select,MenuItem,FormControl,InputLabel,CircularProgress,IconButton,Alert}from'@mui/material';import{Refresh,CheckCircle,RadioButtonUnchecked,MyLocation,LocationOn}from'@mui/icons-material';import{usePractice}from'../../context/PracticeContext';// EXACT same zones as e-solat.gov.my with optgroups\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const malaysianZones=[{group:'Johor',zones:[{value:'JHR01',label:'JHR01 - Pulau Aur dan Pulau Pemanggil'},{value:'JHR02',label:'JHR02 - Johor Bahru, Kota Tinggi, Mersing, Kulai'},{value:'JHR03',label:'JHR03 - Kluang, Pontian'},{value:'JHR04',label:'JHR04 - Batu Pahat, Muar, Segamat, Gemas Johor, Tangkak'}]},{group:'Kedah',zones:[{value:'KDH01',label:'KDH01 - Kota Setar, Kubang Pasu, Pokok Sena (Daerah Kecil)'},{value:'KDH02',label:'KDH02 - Kuala Muda, Yan, Pendang'},{value:'KDH03',label:'KDH03 - Padang Terap, Sik'},{value:'KDH04',label:'KDH04 - Baling'},{value:'KDH05',label:'KDH05 - Bandar Baharu, Kulim'},{value:'KDH06',label:'KDH06 - Langkawi'},{value:'KDH07',label:'KDH07 - Puncak Gunung Jerai'}]},{group:'Kelantan',zones:[{value:'KTN01',label:'KTN01 - Bachok, Kota Bharu, Machang, Pasir Mas, Pasir Puteh, Tanah Merah, Tumpat, Kuala Krai, Mukim Chiku'},{value:'KTN02',label:'KTN02 - Gua Musang (Daerah Galas Dan Bertam), Jeli, Jajahan Kecil Lojing'}]},{group:'Melaka',zones:[{value:'MLK01',label:'MLK01 - SELURUH NEGERI MELAKA'}]},{group:'Negeri Sembilan',zones:[{value:'NGS01',label:'NGS01 - Tampin, Jempol'},{value:'NGS02',label:'NGS02 - Jelebu, Kuala Pilah, Rembau'},{value:'NGS03',label:'NGS03 - Port Dickson, Seremban'}]},{group:'Pahang',zones:[{value:'PHG01',label:'PHG01 - Pulau Tioman'},{value:'PHG02',label:'PHG02 - Kuantan, Pekan, Muadzam Shah'},{value:'PHG03',label:'PHG03 - Jerantut, Temerloh, Maran, Bera, Chenor, Jengka'},{value:'PHG04',label:'PHG04 - Bentong, Lipis, Raub'},{value:'PHG05',label:'PHG05 - Genting Sempah, Janda Baik, Bukit Tinggi'},{value:'PHG06',label:'PHG06 - Cameron Highlands, Genting Higlands, Bukit Fraser'},{value:'PHG07',label:'PHG07 - Zon Khas Daerah Rompin, (Mukim Rompin, Mukim Endau, Mukim Pontian)'}]},{group:'Perlis',zones:[{value:'PLS01',label:'PLS01 - Kangar, Padang Besar, Arau'}]},{group:'Pulau Pinang',zones:[{value:'PNG01',label:'PNG01 - Seluruh Negeri Pulau Pinang'}]},{group:'Perak',zones:[{value:'PRK01',label:'PRK01 - Tapah, Slim River, Tanjung Malim'},{value:'PRK02',label:'PRK02 - Kuala Kangsar, Sg. Siput , Ipoh, Batu Gajah, Kampar'},{value:'PRK03',label:'PRK03 - Lenggong, Pengkalan Hulu, Grik'},{value:'PRK04',label:'PRK04 - Temengor, Belum'},{value:'PRK05',label:'PRK05 - Kg Gajah, Teluk Intan, Bagan Datuk, Seri Iskandar, Beruas, Parit, Lumut, Sitiawan, Pulau Pangkor'},{value:'PRK06',label:'PRK06 - Selama, Taiping, Bagan Serai, Parit Buntar'},{value:'PRK07',label:'PRK07 - Bukit Larut'}]},{group:'Sabah',zones:[{value:'SBH01',label:'SBH01 - Bahagian Sandakan (Timur), Bukit Garam, Semawang, Temanggong, Tambisan, Bandar Sandakan, Sukau'},{value:'SBH02',label:'SBH02 - Beluran, Telupid, Pinangah, Terusan, Kuamut, Bahagian Sandakan (Barat)'},{value:'SBH03',label:'SBH03 - Lahad Datu, Silabukan, Kunak, Sahabat, Sempurna, Tungku, Bahagian Tawau (Timur)'},{value:'SBH04',label:'SBH04 - Bandar Tawau, Balong, Merotai, Kalabakan, Bahagian Tawau (Barat)'},{value:'SBH05',label:'SBH05 - Kudat, Kota Marudu, Pitas, Pulau Banggi, Bahagian Kudat'},{value:'SBH06',label:'SBH06 - Gunung Kinabalu'},{value:'SBH07',label:'SBH07 - Kota Kinabalu, Ranau, Kota Belud, Tuaran, Penampang, Papar, Putatan, Bahagian Pantai Barat'},{value:'SBH08',label:'SBH08 - Pensiangan, Keningau, Tambunan, Nabawan, Bahagian Pendalaman (Atas)'},{value:'SBH09',label:'SBH09 - Beaufort, Kuala Penyu, Sipitang, Tenom, Long Pasia, Membakut, Weston, Bahagian Pendalaman (Bawah)'}]},{group:'Selangor',zones:[{value:'SGR01',label:'SGR01 - Gombak, Petaling, Sepang, Hulu Langat, Hulu Selangor, S.Alam'},{value:'SGR02',label:'SGR02 - Kuala Selangor, Sabak Bernam'},{value:'SGR03',label:'SGR03 - Klang, Kuala Langat'}]},{group:'Sarawak',zones:[{value:'SWK01',label:'SWK01 - Limbang, Lawas, Sundar, Trusan'},{value:'SWK02',label:'SWK02 - Miri, Niah, Bekenu, Sibuti, Marudi'},{value:'SWK03',label:'SWK03 - Pandan, Belaga, Suai, Tatau, Sebauh, Bintulu'},{value:'SWK04',label:'SWK04 - Sibu, Mukah, Dalat, Song, Igan, Oya, Balingian, Kanowit, Kapit'},{value:'SWK05',label:'SWK05 - Sarikei, Matu, Julau, Rajang, Daro, Bintangor, Belawai'},{value:'SWK06',label:'SWK06 - Lubok Antu, Sri Aman, Roban, Debak, Kabong, Lingga, Engkelili, Betong, Spaoh, Pusa, Saratok'},{value:'SWK07',label:'SWK07 - Serian, Simunjan, Samarahan, Sebuyau, Meludam'},{value:'SWK08',label:'SWK08 - Kuching, Bau, Lundu, Sematan'},{value:'SWK09',label:'SWK09 - Zon Khas (Kampung Patarikan)'}]},{group:'Terengganu',zones:[{value:'TRG01',label:'TRG01 - Kuala Terengganu, Marang, Kuala Nerus'},{value:'TRG02',label:'TRG02 - Besut, Setiu'},{value:'TRG03',label:'TRG03 - Hulu Terengganu'},{value:'TRG04',label:'TRG04 - Dungun, Kemaman'}]},{group:'Wilayah Persekutuan',zones:[{value:'WLY01',label:'WLY01 - Kuala Lumpur, Putrajaya'},{value:'WLY02',label:'WLY02 - Labuan'}]}];// Comprehensive GPS mapping for ALL Malaysian zones\nconst preciseGPSMapping=[// Selangor (SGR01)\n{lat:3.0497,lng:101.5841,zone:'SGR01',name:'Kajang'},{lat:3.0733,lng:101.5185,zone:'SGR01',name:'Shah Alam'},{lat:3.1073,lng:101.6067,zone:'SGR01',name:'Petaling Jaya'},{lat:3.2000,lng:101.6333,zone:'SGR01',name:'Kepong'},{lat:2.9936,lng:101.7870,zone:'SGR01',name:'Cyberjaya'},{lat:2.9549,lng:101.7591,zone:'SGR01',name:'Dengkil'},{lat:3.0000,lng:101.7000,zone:'SGR01',name:'Putra Heights'},// Wilayah Persekutuan (WLY01)\n{lat:3.1390,lng:101.6869,zone:'WLY01',name:'Kuala Lumpur City Center'},{lat:2.9264,lng:101.6964,zone:'WLY01',name:'Putrajaya Center'},{lat:3.1586,lng:101.7142,zone:'WLY01',name:'Ampang'},{lat:3.0833,lng:101.6500,zone:'WLY01',name:'Cheras'},// Selangor Other Zones\n{lat:3.0449,lng:101.4456,zone:'SGR03',name:'Klang'},{lat:2.8189,lng:101.7250,zone:'SGR03',name:'Banting'},{lat:3.3500,lng:101.2500,zone:'SGR02',name:'Kuala Selangor'},{lat:3.6800,lng:101.5200,zone:'SGR02',name:'Bestari Jaya'},// Johor\n{lat:1.4927,lng:103.7414,zone:'JHR02',name:'Johor Bahru'},{lat:1.4556,lng:103.7611,zone:'JHR02',name:'Pasir Gudang'},{lat:1.5056,lng:103.6578,zone:'JHR02',name:'Iskandar Puteri'},{lat:2.0333,lng:103.3167,zone:'JHR03',name:'Kluang'},{lat:1.8500,lng:102.9333,zone:'JHR04',name:'Batu Pahat'},{lat:2.5833,lng:103.8333,zone:'JHR01',name:'Mersing'},// Pulau Pinang\n{lat:5.4141,lng:100.3288,zone:'PNG01',name:'George Town'},{lat:5.3500,lng:100.4667,zone:'PNG01',name:'Butterworth'},{lat:5.2833,lng:100.4667,zone:'PNG01',name:'Bayan Lepas'},// Perak\n{lat:4.5975,lng:101.0901,zone:'PRK02',name:'Ipoh'},{lat:4.8500,lng:100.7333,zone:'PRK06',name:'Taiping'},{lat:4.7667,lng:100.9333,zone:'PRK05',name:'Teluk Intan'},{lat:5.1167,lng:100.4833,zone:'PRK01',name:'Tanjung Malim'},// Kelantan\n{lat:6.1254,lng:102.2381,zone:'KTN01',name:'Kota Bharu'},{lat:5.5333,lng:102.2000,zone:'KTN01',name:'Pasir Mas'},{lat:5.2000,lng:102.0500,zone:'KTN02',name:'Gua Musang'},// Terengganu\n{lat:5.3296,lng:103.1370,zone:'TRG01',name:'Kuala Terengganu'},{lat:4.2333,lng:103.4333,zone:'TRG04',name:'Kemaman'},{lat:5.7833,lng:102.5500,zone:'TRG02',name:'Besut'},// Pahang\n{lat:3.8167,lng:103.3333,zone:'PHG02',name:'Kuantan'},{lat:3.4833,lng:102.3500,zone:'PHG03',name:'Temerloh'},{lat:4.2500,lng:102.3833,zone:'PHG04',name:'Bentong'},{lat:3.9000,lng:101.8500,zone:'PHG01',name:'Genting Highlands'},// Melaka\n{lat:2.1896,lng:102.2501,zone:'MLK01',name:'Malacca City'},{lat:2.2667,lng:102.2833,zone:'MLK01',name:'Alor Gajah'},{lat:2.4333,lng:102.2333,zone:'MLK01',name:'Jasin'},// Negeri Sembilan\n{lat:2.7259,lng:101.9378,zone:'NGS03',name:'Seremban'},{lat:2.7167,lng:102.2500,zone:'NGS01',name:'Tampin'},{lat:2.8833,lng:102.2500,zone:'NGS02',name:'Kuala Pilah'},// Kedah\n{lat:6.1164,lng:100.3667,zone:'KDH01',name:'Alor Setar'},{lat:5.6500,lng:100.5000,zone:'KDH02',name:'Sungai Petani'},{lat:6.3167,lng:99.8500,zone:'KDH06',name:'Langkawi'},// Perlis\n{lat:6.4333,lng:100.2000,zone:'PLS01',name:'Kangar'},// Sabah\n{lat:5.9804,lng:116.0735,zone:'SBH07',name:'Kota Kinabalu'},{lat:5.8333,lng:118.1167,zone:'SBH01',name:'Sandakan'},{lat:4.2500,lng:117.2500,zone:'SBH03',name:'Lahad Datu'},{lat:5.9167,lng:116.8333,zone:'SBH08',name:'Keningau'},// Sarawak\n{lat:1.5397,lng:110.3542,zone:'SWK08',name:'Kuching'},{lat:4.4143,lng:114.0086,zone:'SWK02',name:'Miri'},{lat:2.2870,lng:111.8307,zone:'SWK04',name:'Sibu'},{lat:3.1667,lng:113.0333,zone:'SWK03',name:'Bintulu'},// Labuan\n{lat:5.2833,lng:115.2333,zone:'WLY02',name:'Labuan'}];// Function to calculate distance between two coordinates (Haversine formula)\nconst calculateDistance=(lat1,lon1,lat2,lon2)=>{const R=6371;// Earth radius in km\nconst dLat=(lat2-lat1)*Math.PI/180;const dLon=(lon2-lon1)*Math.PI/180;const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(lat1*Math.PI/180)*Math.cos(lat2*Math.PI/180)*Math.sin(dLon/2)*Math.sin(dLon/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return R*c;};// Smart zone detection that works for ALL locations in Malaysia\nconst findClosestZone=(userLat,userLng)=>{console.log(\"\\uD83D\\uDD0D Finding closest zone for coordinates: \".concat(userLat,\", \").concat(userLng));let closestZone='SGR01';// Reasonable default for most populated area\nlet shortestDistance=Infinity;let closestLocation=null;for(const location of preciseGPSMapping){const distance=calculateDistance(userLat,userLng,location.lat,location.lng);if(distance<shortestDistance){shortestDistance=distance;closestZone=location.zone;closestLocation=location.name;}}console.log(\"\\u2705 Auto-detected zone: \".concat(closestZone,\" (\").concat(closestLocation,\"), Distance: \").concat(shortestDistance.toFixed(2),\"km\"));return closestZone;};const PrayerTimes=()=>{const[prayerTimes,setPrayerTimes]=useState(null);const[nextPrayer,setNextPrayer]=useState(null);const[selectedZone,setSelectedZone]=useState('SGR01');const[loading,setLoading]=useState(true);const[locationLoading,setLocationLoading]=useState(false);const[error,setError]=useState(null);const[usingGPS,setUsingGPS]=useState(false);const[userLocation,setUserLocation]=useState(null);const{markPracticeCompleted,markPracticeIncomplete,isPracticeCompleted,todayStats}=usePractice();// Get user's current location - SILENT background detection\nconst getCurrentLocation=()=>{return new Promise((resolve,reject)=>{if(!navigator.geolocation){reject(new Error('Geolocation not supported'));return;}navigator.geolocation.getCurrentPosition(position=>{resolve({latitude:position.coords.latitude,longitude:position.coords.longitude,accuracy:position.coords.accuracy});},error=>{reject(error);},{enableHighAccuracy:false,// Better for background detection\ntimeout:15000,maximumAge:300000// 5 minutes cache\n});});};// Auto-detect location on component mount - SILENT\nconst autoDetectLocation=async()=>{try{setLocationLoading(true);const location=await getCurrentLocation();const zoneCode=findClosestZone(location.latitude,location.longitude);setUserLocation(location);setSelectedZone(zoneCode);setUsingGPS(true);await loadPrayerTimes(zoneCode);console.log('✅ Auto-location detected:',{coordinates:\"\".concat(location.latitude.toFixed(4),\", \").concat(location.longitude.toFixed(4)),zone:zoneCode,accuracy:\"\".concat(Math.round(location.accuracy),\"m\")});}catch(error){console.log('❌ Auto-location failed, using default:',error);// Use detected zone or fallback\nsetUsingGPS(false);await loadPrayerTimes(selectedZone);}finally{setLocationLoading(false);}};// Manual location detection - only when user explicitly clicks\nconst handleDetectLocation=async()=>{setLocationLoading(true);try{const location=await getCurrentLocation();const zoneCode=findClosestZone(location.latitude,location.longitude);setUserLocation(location);setSelectedZone(zoneCode);setUsingGPS(true);await loadPrayerTimes(zoneCode);setError(\"\\uD83D\\uDCCD Location detected! Zone: \".concat(zoneCode));setTimeout(()=>setError(null),3000);}catch(error){console.error('❌ Location detection failed:',error);let errorMessage='Unable to detect your location. ';if(error.code===error.PERMISSION_DENIED){errorMessage+='Please allow location access in your browser settings.';}else if(error.code===error.TIMEOUT){errorMessage+='Location detection timed out.';}else if(error.code===error.POSITION_UNAVAILABLE){errorMessage+='Location information unavailable.';}setError(errorMessage);setUsingGPS(false);}finally{setLocationLoading(false);}};// Convert time to 12-hour format with AM/PM\nconst formatTimeTo12Hour=timeStr=>{if(!timeStr)return'--:--';// If already in 12-hour format, return as is\nif(timeStr.includes('AM')||timeStr.includes('PM')){return timeStr;}// Convert from 24-hour format to 12-hour format\ntry{const[hours,minutes]=timeStr.split(':');let hour=parseInt(hours);const minute=minutes||'00';const period=hour>=12?'PM':'AM';hour=hour%12||12;// Convert 0 to 12, 13 to 1, etc.\nreturn\"\".concat(hour,\":\").concat(minute.toString().padStart(2,'0'),\" \").concat(period);}catch(error){console.error('Error formatting time:',error);return timeStr;}};// Fetch prayer times from backend\n// Replace your fetchPrayerTimes function with this:\nconst fetchPrayerTimes=async zoneCode=>{try{setError(null);// Dynamic API URL - works on both local and mobile\nconst isLocalhost=window.location.hostname==='localhost'||window.location.hostname==='127.0.0.1';const API_BASE=isLocalhost?'http://localhost:5000':'YOUR_PRODUCTION_URL';// You'll set this later when you deploy\nconst response=await fetch(\"\".concat(API_BASE,\"/api/prayertimes/\").concat(zoneCode));if(!response.ok){throw new Error('Failed to fetch prayer times from server');}const data=await response.json();if(data.success&&data.data){// Format all times to 12-hour format\nconst formattedTimes={fajr:formatTimeTo12Hour(data.data.fajr),dhuhr:formatTimeTo12Hour(data.data.dhuhr),asr:formatTimeTo12Hour(data.data.asr),maghrib:formatTimeTo12Hour(data.data.maghrib),isha:formatTimeTo12Hour(data.data.isha),method:'JAKIM e-solat.gov.my (Live)',zone:zoneCode,success:true};return formattedTimes;}else{throw new Error(data.error||'No prayer times data received');}}catch(error){console.error('API Error:',error);// Fallback: Use cached prayer times or show error\nif(window.location.hostname!=='localhost'){setError('Prayer times unavailable. Using sample times.');// Return sample prayer times as fallback\nreturn getSamplePrayerTimes(zoneCode);}throw error;}};// Add this fallback function\nconst getSamplePrayerTimes=zoneCode=>{return{fajr:'5:45 AM',dhuhr:'1:15 PM',asr:'4:30 PM',maghrib:'7:15 PM',isha:'8:30 PM',method:'Sample Times (Backend Unavailable)',zone:zoneCode,success:true};};const loadPrayerTimes=async function(){let zoneCode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:selectedZone;setLoading(true);try{const times=await fetchPrayerTimes(zoneCode);setPrayerTimes(times);setNextPrayer(getNextPrayer(times));setSelectedZone(zoneCode);}catch(error){console.error('Error loading prayer times:',error);setError('Unable to fetch prayer times. Please check if your backend server is running.');}finally{setLoading(false);}};const handleZoneChange=async zoneCode=>{setSelectedZone(zoneCode);setUsingGPS(false);setUserLocation(null);await loadPrayerTimes(zoneCode);};const handlePracticeToggle=prayerName=>{const prayerType=prayerName.toLowerCase();if(isPracticeCompleted(prayerType)){markPracticeIncomplete(prayerType);}else{markPracticeCompleted(prayerType);}};// Get next prayer\nconst getNextPrayer=prayerTimes=>{if(!prayerTimes)return null;const now=new Date();const prayers=[{name:'Fajr',time:prayerTimes.fajr},{name:'Dhuhr',time:prayerTimes.dhuhr},{name:'Asr',time:prayerTimes.asr},{name:'Maghrib',time:prayerTimes.maghrib},{name:'Isha',time:prayerTimes.isha}];for(let prayer of prayers){const prayerTime=parseTimeString(prayer.time);if(prayerTime>now){return{name:prayer.name,time:prayer.time,timeObject:prayerTime};}}// If all prayers passed, return first prayer of next day\nconst tomorrow=new Date(now);tomorrow.setDate(tomorrow.getDate()+1);const fajrTime=parseTimeString(prayerTimes.fajr);tomorrow.setHours(fajrTime.getHours(),fajrTime.getMinutes(),0,0);return{name:'Fajr',time:prayerTimes.fajr,timeObject:tomorrow,isTomorrow:true};};// Helper function to parse time strings\nconst parseTimeString=timeStr=>{if(!timeStr)return new Date();const[time,modifier]=timeStr.split(' ');let[hours,minutes]=time.split(':');hours=parseInt(hours);minutes=parseInt(minutes);if(modifier==='PM'&&hours<12)hours+=12;if(modifier==='AM'&&hours===12)hours=0;const date=new Date();date.setHours(hours,minutes,0,0);return date;};// Auto-detect location on component mount\nuseEffect(()=>{autoDetectLocation();},[]);const prayers=[{name:'Fajr',time:prayerTimes===null||prayerTimes===void 0?void 0:prayerTimes.fajr,icon:'🌅',type:'fajr'},{name:'Dhuhr',time:prayerTimes===null||prayerTimes===void 0?void 0:prayerTimes.dhuhr,icon:'☀️',type:'dhuhr'},{name:'Asr',time:prayerTimes===null||prayerTimes===void 0?void 0:prayerTimes.asr,icon:'🌇',type:'asr'},{name:'Maghrib',time:prayerTimes===null||prayerTimes===void 0?void 0:prayerTimes.maghrib,icon:'🌆',type:'maghrib'},{name:'Isha',time:prayerTimes===null||prayerTimes===void 0?void 0:prayerTimes.isha,icon:'🌙',type:'isha'}];if(loading&&!prayerTimes){return/*#__PURE__*/_jsx(Card,{sx:{borderRadius:3,boxShadow:3},children:/*#__PURE__*/_jsxs(CardContent,{sx:{textAlign:'center',py:4},children:[/*#__PURE__*/_jsx(CircularProgress,{}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mt:2},children:locationLoading?'Auto-detecting your location...':'Loading prayer times...'})]})});}return/*#__PURE__*/_jsx(Card,{sx:{borderRadius:3,boxShadow:3},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:3},children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",sx:{display:'flex',alignItems:'center',gap:1},children:\"\\uD83D\\uDD4C Prayer Times\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"primary.main\",sx:{mt:0.5},children:[todayStats.prayersCompleted,\"/5 prayers completed today\",usingGPS&&' • Location Auto-detected']})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1},children:[/*#__PURE__*/_jsx(Button,{size:\"small\",startIcon:/*#__PURE__*/_jsx(MyLocation,{}),onClick:handleDetectLocation,disabled:locationLoading,variant:usingGPS?\"contained\":\"outlined\",color:usingGPS?\"success\":\"primary\",children:locationLoading?'Detecting...':'Refresh Location'}),/*#__PURE__*/_jsx(Button,{size:\"small\",startIcon:/*#__PURE__*/_jsx(Refresh,{}),onClick:()=>loadPrayerTimes(),disabled:loading,children:\"Refresh\"})]})]}),error&&/*#__PURE__*/_jsx(Alert,{severity:error.includes('detected')?\"success\":\"error\",sx:{mb:2},children:error}),usingGPS&&userLocation&&/*#__PURE__*/_jsxs(Alert,{severity:\"success\",sx:{mb:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{display:'flex',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsx(LocationOn,{fontSize:\"small\"}),\"Auto-detected your location\",userLocation.accuracy&&\" (Accuracy: \".concat(Math.round(userLocation.accuracy),\"m)\")]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Zone: \",/*#__PURE__*/_jsx(\"strong\",{children:selectedZone})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Today's Progress\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"primary.main\",fontWeight:\"bold\",children:[todayStats.prayersCompleted,\"/5\"]})]}),/*#__PURE__*/_jsx(Box,{sx:{width:'100%',height:8,backgroundColor:'grey.200',borderRadius:4,overflow:'hidden'},children:/*#__PURE__*/_jsx(Box,{sx:{width:\"\".concat(todayStats.progress,\"%\"),height:'100%',backgroundColor:'primary.main',borderRadius:4,transition:'width 0.3s ease'}})})]}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mb:3},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Select Zone\"}),/*#__PURE__*/_jsx(Select,{value:selectedZone,label:\"Select Zone\",onChange:e=>handleZoneChange(e.target.value),disabled:loading,children:malaysianZones.map(state=>[/*#__PURE__*/_jsx(Typography,{component:\"div\",sx:{px:2,py:1,fontWeight:'bold',backgroundColor:'grey.100',borderBottom:'1px solid',borderColor:'divider'},children:state.group},state.group),...state.zones.map(zone=>/*#__PURE__*/_jsx(MenuItem,{value:zone.value,sx:{pl:3},children:zone.label},zone.value))])})]}),nextPrayer&&/*#__PURE__*/_jsxs(Box,{sx:{bgcolor:'primary.main',color:'white',p:2,borderRadius:2,mb:3,textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"\\uD83C\\uDFAF Next Prayer\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",fontWeight:\"bold\",children:nextPrayer.name}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[nextPrayer.time,nextPrayer.isTomorrow&&' (Tomorrow)']})]}),prayerTimes&&/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexDirection:'column',gap:2},children:prayers.map(prayer=>{const isCompleted=isPracticeCompleted(prayer.type);const isNextPrayer=(nextPrayer===null||nextPrayer===void 0?void 0:nextPrayer.name)===prayer.name;return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',p:2,borderRadius:2,bgcolor:isNextPrayer?'action.hover':'transparent',border:isNextPrayer?'2px solid':'1px solid',borderColor:isNextPrayer?'primary.main':'divider',opacity:isCompleted?0.8:1},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:prayer.icon}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{textDecoration:isCompleted?'line-through':'none',color:isCompleted?'text.secondary':'text.primary'},children:prayer.name}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:prayer.time||'--:--'})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1},children:[isNextPrayer&&/*#__PURE__*/_jsx(Chip,{label:\"Next\",color:\"primary\",size:\"small\"}),/*#__PURE__*/_jsx(IconButton,{onClick:()=>handlePracticeToggle(prayer.type),color:isCompleted?\"success\":\"default\",sx:{border:isCompleted?'2px solid':'1px solid',borderColor:isCompleted?'success.main':'grey.400'},children:isCompleted?/*#__PURE__*/_jsx(CheckCircle,{}):/*#__PURE__*/_jsx(RadioButtonUnchecked,{})})]})]},prayer.name);})}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2,textAlign:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",children:[prayerTimes===null||prayerTimes===void 0?void 0:prayerTimes.method,\" \\u2022 Zone: \",selectedZone,usingGPS&&' • GPS Auto-detection Active']}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"Live data from JAKIM e-solat.gov.my \\u2022 12-hour format\"})]})]})});};export default PrayerTimes;","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","Box","Chip","Button","Select","MenuItem","FormControl","InputLabel","CircularProgress","IconButton","Alert","Refresh","CheckCircle","RadioButtonUnchecked","MyLocation","LocationOn","usePractice","jsx","_jsx","jsxs","_jsxs","malaysianZones","group","zones","value","label","preciseGPSMapping","lat","lng","zone","name","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","findClosestZone","userLat","userLng","console","log","concat","closestZone","shortestDistance","Infinity","closestLocation","location","distance","toFixed","PrayerTimes","prayerTimes","setPrayerTimes","nextPrayer","setNextPrayer","selectedZone","setSelectedZone","loading","setLoading","locationLoading","setLocationLoading","error","setError","usingGPS","setUsingGPS","userLocation","setUserLocation","markPracticeCompleted","markPracticeIncomplete","isPracticeCompleted","todayStats","getCurrentLocation","Promise","resolve","reject","navigator","geolocation","Error","getCurrentPosition","position","latitude","coords","longitude","accuracy","enableHighAccuracy","timeout","maximumAge","autoDetectLocation","zoneCode","loadPrayerTimes","coordinates","round","handleDetectLocation","setTimeout","errorMessage","code","PERMISSION_DENIED","TIMEOUT","POSITION_UNAVAILABLE","formatTimeTo12Hour","timeStr","includes","hours","minutes","split","hour","parseInt","minute","period","toString","padStart","fetchPrayerTimes","isLocalhost","window","hostname","API_BASE","response","fetch","ok","data","json","success","formattedTimes","fajr","dhuhr","asr","maghrib","isha","method","getSamplePrayerTimes","arguments","length","undefined","times","getNextPrayer","handleZoneChange","handlePracticeToggle","prayerName","prayerType","toLowerCase","now","Date","prayers","time","prayer","prayerTime","parseTimeString","timeObject","tomorrow","setDate","getDate","fajrTime","setHours","getHours","getMinutes","isTomorrow","modifier","date","icon","type","sx","borderRadius","boxShadow","children","textAlign","py","variant","mt","display","justifyContent","alignItems","mb","gap","color","prayersCompleted","size","startIcon","onClick","disabled","severity","fontSize","fontWeight","width","height","backgroundColor","overflow","progress","transition","fullWidth","onChange","e","target","map","state","component","px","borderBottom","borderColor","pl","bgcolor","p","gutterBottom","flexDirection","isCompleted","isNextPrayer","border","opacity","textDecoration"],"sources":["C:/Users/Rashid/muslim-daily/frontend/src/components/PrayerTimes/PrayerTimes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Chip,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  CircularProgress,\r\n  IconButton,\r\n  Alert\r\n} from '@mui/material';\r\nimport { Refresh, CheckCircle, RadioButtonUnchecked, MyLocation, LocationOn } from '@mui/icons-material';\r\nimport { usePractice } from '../../context/PracticeContext';\r\n\r\n// EXACT same zones as e-solat.gov.my with optgroups\r\nconst malaysianZones = [\r\n  { group: 'Johor', zones: [\r\n    { value: 'JHR01', label: 'JHR01 - Pulau Aur dan Pulau Pemanggil' },\r\n    { value: 'JHR02', label: 'JHR02 - Johor Bahru, Kota Tinggi, Mersing, Kulai' },\r\n    { value: 'JHR03', label: 'JHR03 - Kluang, Pontian' },\r\n    { value: 'JHR04', label: 'JHR04 - Batu Pahat, Muar, Segamat, Gemas Johor, Tangkak' }\r\n  ]},\r\n  { group: 'Kedah', zones: [\r\n    { value: 'KDH01', label: 'KDH01 - Kota Setar, Kubang Pasu, Pokok Sena (Daerah Kecil)' },\r\n    { value: 'KDH02', label: 'KDH02 - Kuala Muda, Yan, Pendang' },\r\n    { value: 'KDH03', label: 'KDH03 - Padang Terap, Sik' },\r\n    { value: 'KDH04', label: 'KDH04 - Baling' },\r\n    { value: 'KDH05', label: 'KDH05 - Bandar Baharu, Kulim' },\r\n    { value: 'KDH06', label: 'KDH06 - Langkawi' },\r\n    { value: 'KDH07', label: 'KDH07 - Puncak Gunung Jerai' }\r\n  ]},\r\n  { group: 'Kelantan', zones: [\r\n    { value: 'KTN01', label: 'KTN01 - Bachok, Kota Bharu, Machang, Pasir Mas, Pasir Puteh, Tanah Merah, Tumpat, Kuala Krai, Mukim Chiku' },\r\n    { value: 'KTN02', label: 'KTN02 - Gua Musang (Daerah Galas Dan Bertam), Jeli, Jajahan Kecil Lojing' }\r\n  ]},\r\n  { group: 'Melaka', zones: [\r\n    { value: 'MLK01', label: 'MLK01 - SELURUH NEGERI MELAKA' }\r\n  ]},\r\n  { group: 'Negeri Sembilan', zones: [\r\n    { value: 'NGS01', label: 'NGS01 - Tampin, Jempol' },\r\n    { value: 'NGS02', label: 'NGS02 - Jelebu, Kuala Pilah, Rembau' },\r\n    { value: 'NGS03', label: 'NGS03 - Port Dickson, Seremban' }\r\n  ]},\r\n  { group: 'Pahang', zones: [\r\n    { value: 'PHG01', label: 'PHG01 - Pulau Tioman' },\r\n    { value: 'PHG02', label: 'PHG02 - Kuantan, Pekan, Muadzam Shah' },\r\n    { value: 'PHG03', label: 'PHG03 - Jerantut, Temerloh, Maran, Bera, Chenor, Jengka' },\r\n    { value: 'PHG04', label: 'PHG04 - Bentong, Lipis, Raub' },\r\n    { value: 'PHG05', label: 'PHG05 - Genting Sempah, Janda Baik, Bukit Tinggi' },\r\n    { value: 'PHG06', label: 'PHG06 - Cameron Highlands, Genting Higlands, Bukit Fraser' },\r\n    { value: 'PHG07', label: 'PHG07 - Zon Khas Daerah Rompin, (Mukim Rompin, Mukim Endau, Mukim Pontian)' }\r\n  ]},\r\n  { group: 'Perlis', zones: [\r\n    { value: 'PLS01', label: 'PLS01 - Kangar, Padang Besar, Arau' }\r\n  ]},\r\n  { group: 'Pulau Pinang', zones: [\r\n    { value: 'PNG01', label: 'PNG01 - Seluruh Negeri Pulau Pinang' }\r\n  ]},\r\n  { group: 'Perak', zones: [\r\n    { value: 'PRK01', label: 'PRK01 - Tapah, Slim River, Tanjung Malim' },\r\n    { value: 'PRK02', label: 'PRK02 - Kuala Kangsar, Sg. Siput , Ipoh, Batu Gajah, Kampar' },\r\n    { value: 'PRK03', label: 'PRK03 - Lenggong, Pengkalan Hulu, Grik' },\r\n    { value: 'PRK04', label: 'PRK04 - Temengor, Belum' },\r\n    { value: 'PRK05', label: 'PRK05 - Kg Gajah, Teluk Intan, Bagan Datuk, Seri Iskandar, Beruas, Parit, Lumut, Sitiawan, Pulau Pangkor' },\r\n    { value: 'PRK06', label: 'PRK06 - Selama, Taiping, Bagan Serai, Parit Buntar' },\r\n    { value: 'PRK07', label: 'PRK07 - Bukit Larut' }\r\n  ]},\r\n  { group: 'Sabah', zones: [\r\n    { value: 'SBH01', label: 'SBH01 - Bahagian Sandakan (Timur), Bukit Garam, Semawang, Temanggong, Tambisan, Bandar Sandakan, Sukau' },\r\n    { value: 'SBH02', label: 'SBH02 - Beluran, Telupid, Pinangah, Terusan, Kuamut, Bahagian Sandakan (Barat)' },\r\n    { value: 'SBH03', label: 'SBH03 - Lahad Datu, Silabukan, Kunak, Sahabat, Sempurna, Tungku, Bahagian Tawau (Timur)' },\r\n    { value: 'SBH04', label: 'SBH04 - Bandar Tawau, Balong, Merotai, Kalabakan, Bahagian Tawau (Barat)' },\r\n    { value: 'SBH05', label: 'SBH05 - Kudat, Kota Marudu, Pitas, Pulau Banggi, Bahagian Kudat' },\r\n    { value: 'SBH06', label: 'SBH06 - Gunung Kinabalu' },\r\n    { value: 'SBH07', label: 'SBH07 - Kota Kinabalu, Ranau, Kota Belud, Tuaran, Penampang, Papar, Putatan, Bahagian Pantai Barat' },\r\n    { value: 'SBH08', label: 'SBH08 - Pensiangan, Keningau, Tambunan, Nabawan, Bahagian Pendalaman (Atas)' },\r\n    { value: 'SBH09', label: 'SBH09 - Beaufort, Kuala Penyu, Sipitang, Tenom, Long Pasia, Membakut, Weston, Bahagian Pendalaman (Bawah)' }\r\n  ]},\r\n  { group: 'Selangor', zones: [\r\n    { value: 'SGR01', label: 'SGR01 - Gombak, Petaling, Sepang, Hulu Langat, Hulu Selangor, S.Alam' },\r\n    { value: 'SGR02', label: 'SGR02 - Kuala Selangor, Sabak Bernam' },\r\n    { value: 'SGR03', label: 'SGR03 - Klang, Kuala Langat' }\r\n  ]},\r\n  { group: 'Sarawak', zones: [\r\n    { value: 'SWK01', label: 'SWK01 - Limbang, Lawas, Sundar, Trusan' },\r\n    { value: 'SWK02', label: 'SWK02 - Miri, Niah, Bekenu, Sibuti, Marudi' },\r\n    { value: 'SWK03', label: 'SWK03 - Pandan, Belaga, Suai, Tatau, Sebauh, Bintulu' },\r\n    { value: 'SWK04', label: 'SWK04 - Sibu, Mukah, Dalat, Song, Igan, Oya, Balingian, Kanowit, Kapit' },\r\n    { value: 'SWK05', label: 'SWK05 - Sarikei, Matu, Julau, Rajang, Daro, Bintangor, Belawai' },\r\n    { value: 'SWK06', label: 'SWK06 - Lubok Antu, Sri Aman, Roban, Debak, Kabong, Lingga, Engkelili, Betong, Spaoh, Pusa, Saratok' },\r\n    { value: 'SWK07', label: 'SWK07 - Serian, Simunjan, Samarahan, Sebuyau, Meludam' },\r\n    { value: 'SWK08', label: 'SWK08 - Kuching, Bau, Lundu, Sematan' },\r\n    { value: 'SWK09', label: 'SWK09 - Zon Khas (Kampung Patarikan)' }\r\n  ]},\r\n  { group: 'Terengganu', zones: [\r\n    { value: 'TRG01', label: 'TRG01 - Kuala Terengganu, Marang, Kuala Nerus' },\r\n    { value: 'TRG02', label: 'TRG02 - Besut, Setiu' },\r\n    { value: 'TRG03', label: 'TRG03 - Hulu Terengganu' },\r\n    { value: 'TRG04', label: 'TRG04 - Dungun, Kemaman' }\r\n  ]},\r\n  { group: 'Wilayah Persekutuan', zones: [\r\n    { value: 'WLY01', label: 'WLY01 - Kuala Lumpur, Putrajaya' },\r\n    { value: 'WLY02', label: 'WLY02 - Labuan' }\r\n  ]}\r\n];\r\n\r\n// Comprehensive GPS mapping for ALL Malaysian zones\r\nconst preciseGPSMapping = [\r\n  // Selangor (SGR01)\r\n  { lat: 3.0497, lng: 101.5841, zone: 'SGR01', name: 'Kajang' },\r\n  { lat: 3.0733, lng: 101.5185, zone: 'SGR01', name: 'Shah Alam' },\r\n  { lat: 3.1073, lng: 101.6067, zone: 'SGR01', name: 'Petaling Jaya' },\r\n  { lat: 3.2000, lng: 101.6333, zone: 'SGR01', name: 'Kepong' },\r\n  { lat: 2.9936, lng: 101.7870, zone: 'SGR01', name: 'Cyberjaya' },\r\n  { lat: 2.9549, lng: 101.7591, zone: 'SGR01', name: 'Dengkil' },\r\n  { lat: 3.0000, lng: 101.7000, zone: 'SGR01', name: 'Putra Heights' },\r\n  \r\n  // Wilayah Persekutuan (WLY01)\r\n  { lat: 3.1390, lng: 101.6869, zone: 'WLY01', name: 'Kuala Lumpur City Center' },\r\n  { lat: 2.9264, lng: 101.6964, zone: 'WLY01', name: 'Putrajaya Center' },\r\n  { lat: 3.1586, lng: 101.7142, zone: 'WLY01', name: 'Ampang' },\r\n  { lat: 3.0833, lng: 101.6500, zone: 'WLY01', name: 'Cheras' },\r\n  \r\n  // Selangor Other Zones\r\n  { lat: 3.0449, lng: 101.4456, zone: 'SGR03', name: 'Klang' },\r\n  { lat: 2.8189, lng: 101.7250, zone: 'SGR03', name: 'Banting' },\r\n  { lat: 3.3500, lng: 101.2500, zone: 'SGR02', name: 'Kuala Selangor' },\r\n  { lat: 3.6800, lng: 101.5200, zone: 'SGR02', name: 'Bestari Jaya' },\r\n  \r\n  // Johor\r\n  { lat: 1.4927, lng: 103.7414, zone: 'JHR02', name: 'Johor Bahru' },\r\n  { lat: 1.4556, lng: 103.7611, zone: 'JHR02', name: 'Pasir Gudang' },\r\n  { lat: 1.5056, lng: 103.6578, zone: 'JHR02', name: 'Iskandar Puteri' },\r\n  { lat: 2.0333, lng: 103.3167, zone: 'JHR03', name: 'Kluang' },\r\n  { lat: 1.8500, lng: 102.9333, zone: 'JHR04', name: 'Batu Pahat' },\r\n  { lat: 2.5833, lng: 103.8333, zone: 'JHR01', name: 'Mersing' },\r\n  \r\n  // Pulau Pinang\r\n  { lat: 5.4141, lng: 100.3288, zone: 'PNG01', name: 'George Town' },\r\n  { lat: 5.3500, lng: 100.4667, zone: 'PNG01', name: 'Butterworth' },\r\n  { lat: 5.2833, lng: 100.4667, zone: 'PNG01', name: 'Bayan Lepas' },\r\n  \r\n  // Perak\r\n  { lat: 4.5975, lng: 101.0901, zone: 'PRK02', name: 'Ipoh' },\r\n  { lat: 4.8500, lng: 100.7333, zone: 'PRK06', name: 'Taiping' },\r\n  { lat: 4.7667, lng: 100.9333, zone: 'PRK05', name: 'Teluk Intan' },\r\n  { lat: 5.1167, lng: 100.4833, zone: 'PRK01', name: 'Tanjung Malim' },\r\n  \r\n  // Kelantan\r\n  { lat: 6.1254, lng: 102.2381, zone: 'KTN01', name: 'Kota Bharu' },\r\n  { lat: 5.5333, lng: 102.2000, zone: 'KTN01', name: 'Pasir Mas' },\r\n  { lat: 5.2000, lng: 102.0500, zone: 'KTN02', name: 'Gua Musang' },\r\n  \r\n  // Terengganu\r\n  { lat: 5.3296, lng: 103.1370, zone: 'TRG01', name: 'Kuala Terengganu' },\r\n  { lat: 4.2333, lng: 103.4333, zone: 'TRG04', name: 'Kemaman' },\r\n  { lat: 5.7833, lng: 102.5500, zone: 'TRG02', name: 'Besut' },\r\n  \r\n  // Pahang\r\n  { lat: 3.8167, lng: 103.3333, zone: 'PHG02', name: 'Kuantan' },\r\n  { lat: 3.4833, lng: 102.3500, zone: 'PHG03', name: 'Temerloh' },\r\n  { lat: 4.2500, lng: 102.3833, zone: 'PHG04', name: 'Bentong' },\r\n  { lat: 3.9000, lng: 101.8500, zone: 'PHG01', name: 'Genting Highlands' },\r\n  \r\n  // Melaka\r\n  { lat: 2.1896, lng: 102.2501, zone: 'MLK01', name: 'Malacca City' },\r\n  { lat: 2.2667, lng: 102.2833, zone: 'MLK01', name: 'Alor Gajah' },\r\n  { lat: 2.4333, lng: 102.2333, zone: 'MLK01', name: 'Jasin' },\r\n  \r\n  // Negeri Sembilan\r\n  { lat: 2.7259, lng: 101.9378, zone: 'NGS03', name: 'Seremban' },\r\n  { lat: 2.7167, lng: 102.2500, zone: 'NGS01', name: 'Tampin' },\r\n  { lat: 2.8833, lng: 102.2500, zone: 'NGS02', name: 'Kuala Pilah' },\r\n  \r\n  // Kedah\r\n  { lat: 6.1164, lng: 100.3667, zone: 'KDH01', name: 'Alor Setar' },\r\n  { lat: 5.6500, lng: 100.5000, zone: 'KDH02', name: 'Sungai Petani' },\r\n  { lat: 6.3167, lng: 99.8500, zone: 'KDH06', name: 'Langkawi' },\r\n  \r\n  // Perlis\r\n  { lat: 6.4333, lng: 100.2000, zone: 'PLS01', name: 'Kangar' },\r\n  \r\n  // Sabah\r\n  { lat: 5.9804, lng: 116.0735, zone: 'SBH07', name: 'Kota Kinabalu' },\r\n  { lat: 5.8333, lng: 118.1167, zone: 'SBH01', name: 'Sandakan' },\r\n  { lat: 4.2500, lng: 117.2500, zone: 'SBH03', name: 'Lahad Datu' },\r\n  { lat: 5.9167, lng: 116.8333, zone: 'SBH08', name: 'Keningau' },\r\n  \r\n  // Sarawak\r\n  { lat: 1.5397, lng: 110.3542, zone: 'SWK08', name: 'Kuching' },\r\n  { lat: 4.4143, lng: 114.0086, zone: 'SWK02', name: 'Miri' },\r\n  { lat: 2.2870, lng: 111.8307, zone: 'SWK04', name: 'Sibu' },\r\n  { lat: 3.1667, lng: 113.0333, zone: 'SWK03', name: 'Bintulu' },\r\n  \r\n  // Labuan\r\n  { lat: 5.2833, lng: 115.2333, zone: 'WLY02', name: 'Labuan' }\r\n];\r\n\r\n// Function to calculate distance between two coordinates (Haversine formula)\r\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\r\n  const R = 6371; // Earth radius in km\r\n  const dLat = (lat2 - lat1) * Math.PI / 180;\r\n  const dLon = (lon2 - lon1) * Math.PI / 180;\r\n  const a = \r\n    Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n    Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \r\n    Math.sin(dLon/2) * Math.sin(dLon/2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n  return R * c;\r\n};\r\n\r\n// Smart zone detection that works for ALL locations in Malaysia\r\nconst findClosestZone = (userLat, userLng) => {\r\n  console.log(`🔍 Finding closest zone for coordinates: ${userLat}, ${userLng}`);\r\n  \r\n  let closestZone = 'SGR01'; // Reasonable default for most populated area\r\n  let shortestDistance = Infinity;\r\n  let closestLocation = null;\r\n  \r\n  for (const location of preciseGPSMapping) {\r\n    const distance = calculateDistance(userLat, userLng, location.lat, location.lng);\r\n    \r\n    if (distance < shortestDistance) {\r\n      shortestDistance = distance;\r\n      closestZone = location.zone;\r\n      closestLocation = location.name;\r\n    }\r\n  }\r\n  \r\n  console.log(`✅ Auto-detected zone: ${closestZone} (${closestLocation}), Distance: ${shortestDistance.toFixed(2)}km`);\r\n  return closestZone;\r\n};\r\n\r\nconst PrayerTimes = () => {\r\n  const [prayerTimes, setPrayerTimes] = useState(null);\r\n  const [nextPrayer, setNextPrayer] = useState(null);\r\n  const [selectedZone, setSelectedZone] = useState('SGR01');\r\n  const [loading, setLoading] = useState(true);\r\n  const [locationLoading, setLocationLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [usingGPS, setUsingGPS] = useState(false);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  \r\n  const { markPracticeCompleted, markPracticeIncomplete, isPracticeCompleted, todayStats } = usePractice();\r\n\r\n  // Get user's current location - SILENT background detection\r\n  const getCurrentLocation = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if (!navigator.geolocation) {\r\n        reject(new Error('Geolocation not supported'));\r\n        return;\r\n      }\r\n\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          resolve({\r\n            latitude: position.coords.latitude,\r\n            longitude: position.coords.longitude,\r\n            accuracy: position.coords.accuracy\r\n          });\r\n        },\r\n        (error) => {\r\n          reject(error);\r\n        },\r\n        {\r\n          enableHighAccuracy: false, // Better for background detection\r\n          timeout: 15000,\r\n          maximumAge: 300000 // 5 minutes cache\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  // Auto-detect location on component mount - SILENT\r\n  const autoDetectLocation = async () => {\r\n    try {\r\n      setLocationLoading(true);\r\n      const location = await getCurrentLocation();\r\n      const zoneCode = findClosestZone(location.latitude, location.longitude);\r\n      \r\n      setUserLocation(location);\r\n      setSelectedZone(zoneCode);\r\n      setUsingGPS(true);\r\n      await loadPrayerTimes(zoneCode);\r\n      \r\n      console.log('✅ Auto-location detected:', {\r\n        coordinates: `${location.latitude.toFixed(4)}, ${location.longitude.toFixed(4)}`,\r\n        zone: zoneCode,\r\n        accuracy: `${Math.round(location.accuracy)}m`\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.log('❌ Auto-location failed, using default:', error);\r\n      // Use detected zone or fallback\r\n      setUsingGPS(false);\r\n      await loadPrayerTimes(selectedZone);\r\n    } finally {\r\n      setLocationLoading(false);\r\n    }\r\n  };\r\n\r\n  // Manual location detection - only when user explicitly clicks\r\n  const handleDetectLocation = async () => {\r\n    setLocationLoading(true);\r\n    try {\r\n      const location = await getCurrentLocation();\r\n      const zoneCode = findClosestZone(location.latitude, location.longitude);\r\n      \r\n      setUserLocation(location);\r\n      setSelectedZone(zoneCode);\r\n      setUsingGPS(true);\r\n      await loadPrayerTimes(zoneCode);\r\n      \r\n      setError(`📍 Location detected! Zone: ${zoneCode}`);\r\n      setTimeout(() => setError(null), 3000);\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Location detection failed:', error);\r\n      let errorMessage = 'Unable to detect your location. ';\r\n      \r\n      if (error.code === error.PERMISSION_DENIED) {\r\n        errorMessage += 'Please allow location access in your browser settings.';\r\n      } else if (error.code === error.TIMEOUT) {\r\n        errorMessage += 'Location detection timed out.';\r\n      } else if (error.code === error.POSITION_UNAVAILABLE) {\r\n        errorMessage += 'Location information unavailable.';\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setUsingGPS(false);\r\n    } finally {\r\n      setLocationLoading(false);\r\n    }\r\n  };\r\n\r\n  // Convert time to 12-hour format with AM/PM\r\n  const formatTimeTo12Hour = (timeStr) => {\r\n    if (!timeStr) return '--:--';\r\n    \r\n    // If already in 12-hour format, return as is\r\n    if (timeStr.includes('AM') || timeStr.includes('PM')) {\r\n      return timeStr;\r\n    }\r\n    \r\n    // Convert from 24-hour format to 12-hour format\r\n    try {\r\n      const [hours, minutes] = timeStr.split(':');\r\n      let hour = parseInt(hours);\r\n      const minute = minutes || '00';\r\n      \r\n      const period = hour >= 12 ? 'PM' : 'AM';\r\n      hour = hour % 12 || 12; // Convert 0 to 12, 13 to 1, etc.\r\n      \r\n      return `${hour}:${minute.toString().padStart(2, '0')} ${period}`;\r\n    } catch (error) {\r\n      console.error('Error formatting time:', error);\r\n      return timeStr;\r\n    }\r\n  };\r\n\r\n  // Fetch prayer times from backend\r\n// Replace your fetchPrayerTimes function with this:\r\nconst fetchPrayerTimes = async (zoneCode) => {\r\n  try {\r\n    setError(null);\r\n    \r\n    // Dynamic API URL - works on both local and mobile\r\n    const isLocalhost = window.location.hostname === 'localhost' || \r\n                        window.location.hostname === '127.0.0.1';\r\n    \r\n    const API_BASE = isLocalhost \r\n      ? 'http://localhost:5000' \r\n      : 'YOUR_PRODUCTION_URL'; // You'll set this later when you deploy\r\n    \r\n    const response = await fetch(`${API_BASE}/api/prayertimes/${zoneCode}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch prayer times from server');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    if (data.success && data.data) {\r\n      // Format all times to 12-hour format\r\n      const formattedTimes = {\r\n        fajr: formatTimeTo12Hour(data.data.fajr),\r\n        dhuhr: formatTimeTo12Hour(data.data.dhuhr),\r\n        asr: formatTimeTo12Hour(data.data.asr),\r\n        maghrib: formatTimeTo12Hour(data.data.maghrib),\r\n        isha: formatTimeTo12Hour(data.data.isha),\r\n        method: 'JAKIM e-solat.gov.my (Live)',\r\n        zone: zoneCode,\r\n        success: true\r\n      };\r\n      \r\n      return formattedTimes;\r\n    } else {\r\n      throw new Error(data.error || 'No prayer times data received');\r\n    }\r\n  } catch (error) {\r\n    console.error('API Error:', error);\r\n    \r\n    // Fallback: Use cached prayer times or show error\r\n    if (window.location.hostname !== 'localhost') {\r\n      setError('Prayer times unavailable. Using sample times.');\r\n      // Return sample prayer times as fallback\r\n      return getSamplePrayerTimes(zoneCode);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Add this fallback function\r\nconst getSamplePrayerTimes = (zoneCode) => {\r\n  return {\r\n    fajr: '5:45 AM',\r\n    dhuhr: '1:15 PM', \r\n    asr: '4:30 PM',\r\n    maghrib: '7:15 PM',\r\n    isha: '8:30 PM',\r\n    method: 'Sample Times (Backend Unavailable)',\r\n    zone: zoneCode,\r\n    success: true\r\n  };\r\n};\r\n\r\n  const loadPrayerTimes = async (zoneCode = selectedZone) => {\r\n    setLoading(true);\r\n    try {\r\n      const times = await fetchPrayerTimes(zoneCode);\r\n      setPrayerTimes(times);\r\n      setNextPrayer(getNextPrayer(times));\r\n      setSelectedZone(zoneCode);\r\n    } catch (error) {\r\n      console.error('Error loading prayer times:', error);\r\n      setError('Unable to fetch prayer times. Please check if your backend server is running.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleZoneChange = async (zoneCode) => {\r\n    setSelectedZone(zoneCode);\r\n    setUsingGPS(false);\r\n    setUserLocation(null);\r\n    await loadPrayerTimes(zoneCode);\r\n  };\r\n\r\n  const handlePracticeToggle = (prayerName) => {\r\n    const prayerType = prayerName.toLowerCase();\r\n    \r\n    if (isPracticeCompleted(prayerType)) {\r\n      markPracticeIncomplete(prayerType);\r\n    } else {\r\n      markPracticeCompleted(prayerType);\r\n    }\r\n  };\r\n\r\n  // Get next prayer\r\n  const getNextPrayer = (prayerTimes) => {\r\n    if (!prayerTimes) return null;\r\n    \r\n    const now = new Date();\r\n    const prayers = [\r\n      { name: 'Fajr', time: prayerTimes.fajr },\r\n      { name: 'Dhuhr', time: prayerTimes.dhuhr },\r\n      { name: 'Asr', time: prayerTimes.asr },\r\n      { name: 'Maghrib', time: prayerTimes.maghrib },\r\n      { name: 'Isha', time: prayerTimes.isha }\r\n    ];\r\n\r\n    for (let prayer of prayers) {\r\n      const prayerTime = parseTimeString(prayer.time);\r\n      \r\n      if (prayerTime > now) {\r\n        return {\r\n          name: prayer.name,\r\n          time: prayer.time,\r\n          timeObject: prayerTime\r\n        };\r\n      }\r\n    }\r\n\r\n    // If all prayers passed, return first prayer of next day\r\n    const tomorrow = new Date(now);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    const fajrTime = parseTimeString(prayerTimes.fajr);\r\n    tomorrow.setHours(fajrTime.getHours(), fajrTime.getMinutes(), 0, 0);\r\n    \r\n    return {\r\n      name: 'Fajr',\r\n      time: prayerTimes.fajr,\r\n      timeObject: tomorrow,\r\n      isTomorrow: true\r\n    };\r\n  };\r\n\r\n  // Helper function to parse time strings\r\n  const parseTimeString = (timeStr) => {\r\n    if (!timeStr) return new Date();\r\n    \r\n    const [time, modifier] = timeStr.split(' ');\r\n    let [hours, minutes] = time.split(':');\r\n    \r\n    hours = parseInt(hours);\r\n    minutes = parseInt(minutes);\r\n    \r\n    if (modifier === 'PM' && hours < 12) hours += 12;\r\n    if (modifier === 'AM' && hours === 12) hours = 0;\r\n    \r\n    const date = new Date();\r\n    date.setHours(hours, minutes, 0, 0);\r\n    return date;\r\n  };\r\n\r\n  // Auto-detect location on component mount\r\n  useEffect(() => {\r\n    autoDetectLocation();\r\n  }, []);\r\n\r\n  const prayers = [\r\n    { name: 'Fajr', time: prayerTimes?.fajr, icon: '🌅', type: 'fajr' },\r\n    { name: 'Dhuhr', time: prayerTimes?.dhuhr, icon: '☀️', type: 'dhuhr' },\r\n    { name: 'Asr', time: prayerTimes?.asr, icon: '🌇', type: 'asr' },\r\n    { name: 'Maghrib', time: prayerTimes?.maghrib, icon: '🌆', type: 'maghrib' },\r\n    { name: 'Isha', time: prayerTimes?.isha, icon: '🌙', type: 'isha' }\r\n  ];\r\n\r\n  if (loading && !prayerTimes) {\r\n    return (\r\n      <Card sx={{ borderRadius: 3, boxShadow: 3 }}>\r\n        <CardContent sx={{ textAlign: 'center', py: 4 }}>\r\n          <CircularProgress />\r\n          <Typography variant=\"body1\" sx={{ mt: 2 }}>\r\n            {locationLoading ? 'Auto-detecting your location...' : 'Loading prayer times...'}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card sx={{ borderRadius: 3, boxShadow: 3 }}>\r\n      <CardContent>\r\n        {/* Header */}\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n          <Box>\r\n            <Typography variant=\"h5\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              🕌 Prayer Times\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"primary.main\" sx={{ mt: 0.5 }}>\r\n              {todayStats.prayersCompleted}/5 prayers completed today\r\n              {usingGPS && ' • Location Auto-detected'}\r\n            </Typography>\r\n          </Box>\r\n          \r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Button\r\n              size=\"small\"\r\n              startIcon={<MyLocation />}\r\n              onClick={handleDetectLocation}\r\n              disabled={locationLoading}\r\n              variant={usingGPS ? \"contained\" : \"outlined\"}\r\n              color={usingGPS ? \"success\" : \"primary\"}\r\n            >\r\n              {locationLoading ? 'Detecting...' : 'Refresh Location'}\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              startIcon={<Refresh />}\r\n              onClick={() => loadPrayerTimes()}\r\n              disabled={loading}\r\n            >\r\n              Refresh\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n\r\n        {error && (\r\n          <Alert severity={error.includes('detected') ? \"success\" : \"error\"} sx={{ mb: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Location Info */}\r\n        {usingGPS && userLocation && (\r\n          <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n            <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <LocationOn fontSize=\"small\" />\r\n              Auto-detected your location \r\n              {userLocation.accuracy && ` (Accuracy: ${Math.round(userLocation.accuracy)}m)`}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Zone: <strong>{selectedZone}</strong>\r\n            </Typography>\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Progress Bar */}\r\n        <Box sx={{ mb: 3 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Today's Progress\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"primary.main\" fontWeight=\"bold\">\r\n              {todayStats.prayersCompleted}/5\r\n            </Typography>\r\n          </Box>\r\n          <Box sx={{ \r\n            width: '100%', \r\n            height: 8, \r\n            backgroundColor: 'grey.200', \r\n            borderRadius: 4,\r\n            overflow: 'hidden'\r\n          }}>\r\n            <Box \r\n              sx={{ \r\n                width: `${todayStats.progress}%`, \r\n                height: '100%', \r\n                backgroundColor: 'primary.main',\r\n                borderRadius: 4,\r\n                transition: 'width 0.3s ease'\r\n              }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Zone Selection */}\r\n        <FormControl fullWidth sx={{ mb: 3 }}>\r\n          <InputLabel>Select Zone</InputLabel>\r\n          <Select\r\n            value={selectedZone}\r\n            label=\"Select Zone\"\r\n            onChange={(e) => handleZoneChange(e.target.value)}\r\n            disabled={loading}\r\n          >\r\n            {malaysianZones.map((state) => [\r\n              <Typography \r\n                key={state.group} \r\n                component=\"div\" \r\n                sx={{ \r\n                  px: 2, \r\n                  py: 1, \r\n                  fontWeight: 'bold', \r\n                  backgroundColor: 'grey.100',\r\n                  borderBottom: '1px solid',\r\n                  borderColor: 'divider'\r\n                }}\r\n              >\r\n                {state.group}\r\n              </Typography>,\r\n              ...state.zones.map(zone => (\r\n                <MenuItem key={zone.value} value={zone.value} sx={{ pl: 3 }}>\r\n                  {zone.label}\r\n                </MenuItem>\r\n              ))\r\n            ])}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {/* Next Prayer */}\r\n        {nextPrayer && (\r\n          <Box sx={{ \r\n            bgcolor: 'primary.main', \r\n            color: 'white', \r\n            p: 2, \r\n            borderRadius: 2, \r\n            mb: 3,\r\n            textAlign: 'center'\r\n          }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              🎯 Next Prayer\r\n            </Typography>\r\n            <Typography variant=\"h4\" fontWeight=\"bold\">\r\n              {nextPrayer.name}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {nextPrayer.time}\r\n              {nextPrayer.isTomorrow && ' (Tomorrow)'}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n\r\n        {/* Prayer Times List */}\r\n        {prayerTimes && (\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n            {prayers.map((prayer) => {\r\n              const isCompleted = isPracticeCompleted(prayer.type);\r\n              const isNextPrayer = nextPrayer?.name === prayer.name;\r\n              \r\n              return (\r\n                <Box \r\n                  key={prayer.name}\r\n                  sx={{ \r\n                    display: 'flex', \r\n                    justifyContent: 'space-between', \r\n                    alignItems: 'center',\r\n                    p: 2,\r\n                    borderRadius: 2,\r\n                    bgcolor: isNextPrayer ? 'action.hover' : 'transparent',\r\n                    border: isNextPrayer ? '2px solid' : '1px solid',\r\n                    borderColor: isNextPrayer ? 'primary.main' : 'divider',\r\n                    opacity: isCompleted ? 0.8 : 1\r\n                  }}\r\n                >\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                    <Typography variant=\"h5\">{prayer.icon}</Typography>\r\n                    <Box>\r\n                      <Typography \r\n                        variant=\"h6\"\r\n                        sx={{ \r\n                          textDecoration: isCompleted ? 'line-through' : 'none',\r\n                          color: isCompleted ? 'text.secondary' : 'text.primary'\r\n                        }}\r\n                      >\r\n                        {prayer.name}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {prayer.time || '--:--'}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  \r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                    {isNextPrayer && (\r\n                      <Chip \r\n                        label=\"Next\" \r\n                        color=\"primary\" \r\n                        size=\"small\"\r\n                      />\r\n                    )}\r\n                    \r\n                    <IconButton\r\n                      onClick={() => handlePracticeToggle(prayer.type)}\r\n                      color={isCompleted ? \"success\" : \"default\"}\r\n                      sx={{\r\n                        border: isCompleted ? '2px solid' : '1px solid',\r\n                        borderColor: isCompleted ? 'success.main' : 'grey.400'\r\n                      }}\r\n                    >\r\n                      {isCompleted ? <CheckCircle /> : <RadioButtonUnchecked />}\r\n                    </IconButton>\r\n                  </Box>\r\n                </Box>\r\n              );\r\n            })}\r\n          </Box>\r\n        )}\r\n\r\n        {/* Footer Info */}\r\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            {prayerTimes?.method} • Zone: {selectedZone}\r\n            {usingGPS && ' • GPS Auto-detection Active'}\r\n          </Typography>\r\n          <br />\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            Live data from JAKIM e-solat.gov.my • 12-hour format\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PrayerTimes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}