{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rashid\\\\muslim-daily\\\\frontend\\\\src\\\\components\\\\PrayerTimes\\\\PrayerTimes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Box, Chip, Button, Select, MenuItem, FormControl, InputLabel, CircularProgress, IconButton, Alert } from '@mui/material';\nimport { Refresh, CheckCircle, RadioButtonUnchecked, MyLocation, LocationOn } from '@mui/icons-material';\nimport { usePractice } from '../../context/PracticeContext';\n\n// EXACT same zones as e-solat.gov.my with optgroups\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst malaysianZones = [{\n  group: 'Johor',\n  zones: [{\n    value: 'JHR01',\n    label: 'JHR01 - Pulau Aur dan Pulau Pemanggil'\n  }, {\n    value: 'JHR02',\n    label: 'JHR02 - Johor Bahru, Kota Tinggi, Mersing, Kulai'\n  }, {\n    value: 'JHR03',\n    label: 'JHR03 - Kluang, Pontian'\n  }, {\n    value: 'JHR04',\n    label: 'JHR04 - Batu Pahat, Muar, Segamat, Gemas Johor, Tangkak'\n  }]\n}, {\n  group: 'Kedah',\n  zones: [{\n    value: 'KDH01',\n    label: 'KDH01 - Kota Setar, Kubang Pasu, Pokok Sena (Daerah Kecil)'\n  }, {\n    value: 'KDH02',\n    label: 'KDH02 - Kuala Muda, Yan, Pendang'\n  }, {\n    value: 'KDH03',\n    label: 'KDH03 - Padang Terap, Sik'\n  }, {\n    value: 'KDH04',\n    label: 'KDH04 - Baling'\n  }, {\n    value: 'KDH05',\n    label: 'KDH05 - Bandar Baharu, Kulim'\n  }, {\n    value: 'KDH06',\n    label: 'KDH06 - Langkawi'\n  }, {\n    value: 'KDH07',\n    label: 'KDH07 - Puncak Gunung Jerai'\n  }]\n}, {\n  group: 'Kelantan',\n  zones: [{\n    value: 'KTN01',\n    label: 'KTN01 - Bachok, Kota Bharu, Machang, Pasir Mas, Pasir Puteh, Tanah Merah, Tumpat, Kuala Krai, Mukim Chiku'\n  }, {\n    value: 'KTN02',\n    label: 'KTN02 - Gua Musang (Daerah Galas Dan Bertam), Jeli, Jajahan Kecil Lojing'\n  }]\n}, {\n  group: 'Melaka',\n  zones: [{\n    value: 'MLK01',\n    label: 'MLK01 - SELURUH NEGERI MELAKA'\n  }]\n}, {\n  group: 'Negeri Sembilan',\n  zones: [{\n    value: 'NGS01',\n    label: 'NGS01 - Tampin, Jempol'\n  }, {\n    value: 'NGS02',\n    label: 'NGS02 - Jelebu, Kuala Pilah, Rembau'\n  }, {\n    value: 'NGS03',\n    label: 'NGS03 - Port Dickson, Seremban'\n  }]\n}, {\n  group: 'Pahang',\n  zones: [{\n    value: 'PHG01',\n    label: 'PHG01 - Pulau Tioman'\n  }, {\n    value: 'PHG02',\n    label: 'PHG02 - Kuantan, Pekan, Muadzam Shah'\n  }, {\n    value: 'PHG03',\n    label: 'PHG03 - Jerantut, Temerloh, Maran, Bera, Chenor, Jengka'\n  }, {\n    value: 'PHG04',\n    label: 'PHG04 - Bentong, Lipis, Raub'\n  }, {\n    value: 'PHG05',\n    label: 'PHG05 - Genting Sempah, Janda Baik, Bukit Tinggi'\n  }, {\n    value: 'PHG06',\n    label: 'PHG06 - Cameron Highlands, Genting Higlands, Bukit Fraser'\n  }, {\n    value: 'PHG07',\n    label: 'PHG07 - Zon Khas Daerah Rompin, (Mukim Rompin, Mukim Endau, Mukim Pontian)'\n  }]\n}, {\n  group: 'Perlis',\n  zones: [{\n    value: 'PLS01',\n    label: 'PLS01 - Kangar, Padang Besar, Arau'\n  }]\n}, {\n  group: 'Pulau Pinang',\n  zones: [{\n    value: 'PNG01',\n    label: 'PNG01 - Seluruh Negeri Pulau Pinang'\n  }]\n}, {\n  group: 'Perak',\n  zones: [{\n    value: 'PRK01',\n    label: 'PRK01 - Tapah, Slim River, Tanjung Malim'\n  }, {\n    value: 'PRK02',\n    label: 'PRK02 - Kuala Kangsar, Sg. Siput , Ipoh, Batu Gajah, Kampar'\n  }, {\n    value: 'PRK03',\n    label: 'PRK03 - Lenggong, Pengkalan Hulu, Grik'\n  }, {\n    value: 'PRK04',\n    label: 'PRK04 - Temengor, Belum'\n  }, {\n    value: 'PRK05',\n    label: 'PRK05 - Kg Gajah, Teluk Intan, Bagan Datuk, Seri Iskandar, Beruas, Parit, Lumut, Sitiawan, Pulau Pangkor'\n  }, {\n    value: 'PRK06',\n    label: 'PRK06 - Selama, Taiping, Bagan Serai, Parit Buntar'\n  }, {\n    value: 'PRK07',\n    label: 'PRK07 - Bukit Larut'\n  }]\n}, {\n  group: 'Sabah',\n  zones: [{\n    value: 'SBH01',\n    label: 'SBH01 - Bahagian Sandakan (Timur), Bukit Garam, Semawang, Temanggong, Tambisan, Bandar Sandakan, Sukau'\n  }, {\n    value: 'SBH02',\n    label: 'SBH02 - Beluran, Telupid, Pinangah, Terusan, Kuamut, Bahagian Sandakan (Barat)'\n  }, {\n    value: 'SBH03',\n    label: 'SBH03 - Lahad Datu, Silabukan, Kunak, Sahabat, Sempurna, Tungku, Bahagian Tawau (Timur)'\n  }, {\n    value: 'SBH04',\n    label: 'SBH04 - Bandar Tawau, Balong, Merotai, Kalabakan, Bahagian Tawau (Barat)'\n  }, {\n    value: 'SBH05',\n    label: 'SBH05 - Kudat, Kota Marudu, Pitas, Pulau Banggi, Bahagian Kudat'\n  }, {\n    value: 'SBH06',\n    label: 'SBH06 - Gunung Kinabalu'\n  }, {\n    value: 'SBH07',\n    label: 'SBH07 - Kota Kinabalu, Ranau, Kota Belud, Tuaran, Penampang, Papar, Putatan, Bahagian Pantai Barat'\n  }, {\n    value: 'SBH08',\n    label: 'SBH08 - Pensiangan, Keningau, Tambunan, Nabawan, Bahagian Pendalaman (Atas)'\n  }, {\n    value: 'SBH09',\n    label: 'SBH09 - Beaufort, Kuala Penyu, Sipitang, Tenom, Long Pasia, Membakut, Weston, Bahagian Pendalaman (Bawah)'\n  }]\n}, {\n  group: 'Selangor',\n  zones: [{\n    value: 'SGR01',\n    label: 'SGR01 - Gombak, Petaling, Sepang, Hulu Langat, Hulu Selangor, S.Alam'\n  }, {\n    value: 'SGR02',\n    label: 'SGR02 - Kuala Selangor, Sabak Bernam'\n  }, {\n    value: 'SGR03',\n    label: 'SGR03 - Klang, Kuala Langat'\n  }]\n}, {\n  group: 'Sarawak',\n  zones: [{\n    value: 'SWK01',\n    label: 'SWK01 - Limbang, Lawas, Sundar, Trusan'\n  }, {\n    value: 'SWK02',\n    label: 'SWK02 - Miri, Niah, Bekenu, Sibuti, Marudi'\n  }, {\n    value: 'SWK03',\n    label: 'SWK03 - Pandan, Belaga, Suai, Tatau, Sebauh, Bintulu'\n  }, {\n    value: 'SWK04',\n    label: 'SWK04 - Sibu, Mukah, Dalat, Song, Igan, Oya, Balingian, Kanowit, Kapit'\n  }, {\n    value: 'SWK05',\n    label: 'SWK05 - Sarikei, Matu, Julau, Rajang, Daro, Bintangor, Belawai'\n  }, {\n    value: 'SWK06',\n    label: 'SWK06 - Lubok Antu, Sri Aman, Roban, Debak, Kabong, Lingga, Engkelili, Betong, Spaoh, Pusa, Saratok'\n  }, {\n    value: 'SWK07',\n    label: 'SWK07 - Serian, Simunjan, Samarahan, Sebuyau, Meludam'\n  }, {\n    value: 'SWK08',\n    label: 'SWK08 - Kuching, Bau, Lundu, Sematan'\n  }, {\n    value: 'SWK09',\n    label: 'SWK09 - Zon Khas (Kampung Patarikan)'\n  }]\n}, {\n  group: 'Terengganu',\n  zones: [{\n    value: 'TRG01',\n    label: 'TRG01 - Kuala Terengganu, Marang, Kuala Nerus'\n  }, {\n    value: 'TRG02',\n    label: 'TRG02 - Besut, Setiu'\n  }, {\n    value: 'TRG03',\n    label: 'TRG03 - Hulu Terengganu'\n  }, {\n    value: 'TRG04',\n    label: 'TRG04 - Dungun, Kemaman'\n  }]\n}, {\n  group: 'Wilayah Persekutuan',\n  zones: [{\n    value: 'WLY01',\n    label: 'WLY01 - Kuala Lumpur, Putrajaya'\n  }, {\n    value: 'WLY02',\n    label: 'WLY02 - Labuan'\n  }]\n}];\n\n// Comprehensive GPS mapping for ALL Malaysian zones\nconst preciseGPSMapping = [\n// Selangor (SGR01)\n{\n  lat: 3.0497,\n  lng: 101.5841,\n  zone: 'SGR01',\n  name: 'Kajang'\n}, {\n  lat: 3.0733,\n  lng: 101.5185,\n  zone: 'SGR01',\n  name: 'Shah Alam'\n}, {\n  lat: 3.1073,\n  lng: 101.6067,\n  zone: 'SGR01',\n  name: 'Petaling Jaya'\n}, {\n  lat: 3.2000,\n  lng: 101.6333,\n  zone: 'SGR01',\n  name: 'Kepong'\n}, {\n  lat: 2.9936,\n  lng: 101.7870,\n  zone: 'SGR01',\n  name: 'Cyberjaya'\n}, {\n  lat: 2.9549,\n  lng: 101.7591,\n  zone: 'SGR01',\n  name: 'Dengkil'\n}, {\n  lat: 3.0000,\n  lng: 101.7000,\n  zone: 'SGR01',\n  name: 'Putra Heights'\n},\n// Wilayah Persekutuan (WLY01)\n{\n  lat: 3.1390,\n  lng: 101.6869,\n  zone: 'WLY01',\n  name: 'Kuala Lumpur City Center'\n}, {\n  lat: 2.9264,\n  lng: 101.6964,\n  zone: 'WLY01',\n  name: 'Putrajaya Center'\n}, {\n  lat: 3.1586,\n  lng: 101.7142,\n  zone: 'WLY01',\n  name: 'Ampang'\n}, {\n  lat: 3.0833,\n  lng: 101.6500,\n  zone: 'WLY01',\n  name: 'Cheras'\n},\n// Selangor Other Zones\n{\n  lat: 3.0449,\n  lng: 101.4456,\n  zone: 'SGR03',\n  name: 'Klang'\n}, {\n  lat: 2.8189,\n  lng: 101.7250,\n  zone: 'SGR03',\n  name: 'Banting'\n}, {\n  lat: 3.3500,\n  lng: 101.2500,\n  zone: 'SGR02',\n  name: 'Kuala Selangor'\n}, {\n  lat: 3.6800,\n  lng: 101.5200,\n  zone: 'SGR02',\n  name: 'Bestari Jaya'\n},\n// Johor\n{\n  lat: 1.4927,\n  lng: 103.7414,\n  zone: 'JHR02',\n  name: 'Johor Bahru'\n}, {\n  lat: 1.4556,\n  lng: 103.7611,\n  zone: 'JHR02',\n  name: 'Pasir Gudang'\n}, {\n  lat: 1.5056,\n  lng: 103.6578,\n  zone: 'JHR02',\n  name: 'Iskandar Puteri'\n}, {\n  lat: 2.0333,\n  lng: 103.3167,\n  zone: 'JHR03',\n  name: 'Kluang'\n}, {\n  lat: 1.8500,\n  lng: 102.9333,\n  zone: 'JHR04',\n  name: 'Batu Pahat'\n}, {\n  lat: 2.5833,\n  lng: 103.8333,\n  zone: 'JHR01',\n  name: 'Mersing'\n},\n// Pulau Pinang\n{\n  lat: 5.4141,\n  lng: 100.3288,\n  zone: 'PNG01',\n  name: 'George Town'\n}, {\n  lat: 5.3500,\n  lng: 100.4667,\n  zone: 'PNG01',\n  name: 'Butterworth'\n}, {\n  lat: 5.2833,\n  lng: 100.4667,\n  zone: 'PNG01',\n  name: 'Bayan Lepas'\n},\n// Perak\n{\n  lat: 4.5975,\n  lng: 101.0901,\n  zone: 'PRK02',\n  name: 'Ipoh'\n}, {\n  lat: 4.8500,\n  lng: 100.7333,\n  zone: 'PRK06',\n  name: 'Taiping'\n}, {\n  lat: 4.7667,\n  lng: 100.9333,\n  zone: 'PRK05',\n  name: 'Teluk Intan'\n}, {\n  lat: 5.1167,\n  lng: 100.4833,\n  zone: 'PRK01',\n  name: 'Tanjung Malim'\n},\n// Kelantan\n{\n  lat: 6.1254,\n  lng: 102.2381,\n  zone: 'KTN01',\n  name: 'Kota Bharu'\n}, {\n  lat: 5.5333,\n  lng: 102.2000,\n  zone: 'KTN01',\n  name: 'Pasir Mas'\n}, {\n  lat: 5.2000,\n  lng: 102.0500,\n  zone: 'KTN02',\n  name: 'Gua Musang'\n},\n// Terengganu\n{\n  lat: 5.3296,\n  lng: 103.1370,\n  zone: 'TRG01',\n  name: 'Kuala Terengganu'\n}, {\n  lat: 4.2333,\n  lng: 103.4333,\n  zone: 'TRG04',\n  name: 'Kemaman'\n}, {\n  lat: 5.7833,\n  lng: 102.5500,\n  zone: 'TRG02',\n  name: 'Besut'\n},\n// Pahang\n{\n  lat: 3.8167,\n  lng: 103.3333,\n  zone: 'PHG02',\n  name: 'Kuantan'\n}, {\n  lat: 3.4833,\n  lng: 102.3500,\n  zone: 'PHG03',\n  name: 'Temerloh'\n}, {\n  lat: 4.2500,\n  lng: 102.3833,\n  zone: 'PHG04',\n  name: 'Bentong'\n}, {\n  lat: 3.9000,\n  lng: 101.8500,\n  zone: 'PHG01',\n  name: 'Genting Highlands'\n},\n// Melaka\n{\n  lat: 2.1896,\n  lng: 102.2501,\n  zone: 'MLK01',\n  name: 'Malacca City'\n}, {\n  lat: 2.2667,\n  lng: 102.2833,\n  zone: 'MLK01',\n  name: 'Alor Gajah'\n}, {\n  lat: 2.4333,\n  lng: 102.2333,\n  zone: 'MLK01',\n  name: 'Jasin'\n},\n// Negeri Sembilan\n{\n  lat: 2.7259,\n  lng: 101.9378,\n  zone: 'NGS03',\n  name: 'Seremban'\n}, {\n  lat: 2.7167,\n  lng: 102.2500,\n  zone: 'NGS01',\n  name: 'Tampin'\n}, {\n  lat: 2.8833,\n  lng: 102.2500,\n  zone: 'NGS02',\n  name: 'Kuala Pilah'\n},\n// Kedah\n{\n  lat: 6.1164,\n  lng: 100.3667,\n  zone: 'KDH01',\n  name: 'Alor Setar'\n}, {\n  lat: 5.6500,\n  lng: 100.5000,\n  zone: 'KDH02',\n  name: 'Sungai Petani'\n}, {\n  lat: 6.3167,\n  lng: 99.8500,\n  zone: 'KDH06',\n  name: 'Langkawi'\n},\n// Perlis\n{\n  lat: 6.4333,\n  lng: 100.2000,\n  zone: 'PLS01',\n  name: 'Kangar'\n},\n// Sabah\n{\n  lat: 5.9804,\n  lng: 116.0735,\n  zone: 'SBH07',\n  name: 'Kota Kinabalu'\n}, {\n  lat: 5.8333,\n  lng: 118.1167,\n  zone: 'SBH01',\n  name: 'Sandakan'\n}, {\n  lat: 4.2500,\n  lng: 117.2500,\n  zone: 'SBH03',\n  name: 'Lahad Datu'\n}, {\n  lat: 5.9167,\n  lng: 116.8333,\n  zone: 'SBH08',\n  name: 'Keningau'\n},\n// Sarawak\n{\n  lat: 1.5397,\n  lng: 110.3542,\n  zone: 'SWK08',\n  name: 'Kuching'\n}, {\n  lat: 4.4143,\n  lng: 114.0086,\n  zone: 'SWK02',\n  name: 'Miri'\n}, {\n  lat: 2.2870,\n  lng: 111.8307,\n  zone: 'SWK04',\n  name: 'Sibu'\n}, {\n  lat: 3.1667,\n  lng: 113.0333,\n  zone: 'SWK03',\n  name: 'Bintulu'\n},\n// Labuan\n{\n  lat: 5.2833,\n  lng: 115.2333,\n  zone: 'WLY02',\n  name: 'Labuan'\n}];\n\n// Function to calculate distance between two coordinates (Haversine formula)\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // Earth radius in km\n  const dLat = (lat2 - lat1) * Math.PI / 180;\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n};\n\n// Smart zone detection that works for ALL locations in Malaysia\nconst findClosestZone = (userLat, userLng) => {\n  console.log(`🔍 Finding closest zone for coordinates: ${userLat}, ${userLng}`);\n  let closestZone = 'SGR01'; // Reasonable default for most populated area\n  let shortestDistance = Infinity;\n  let closestLocation = null;\n  for (const location of preciseGPSMapping) {\n    const distance = calculateDistance(userLat, userLng, location.lat, location.lng);\n    if (distance < shortestDistance) {\n      shortestDistance = distance;\n      closestZone = location.zone;\n      closestLocation = location.name;\n    }\n  }\n  console.log(`✅ Auto-detected zone: ${closestZone} (${closestLocation}), Distance: ${shortestDistance.toFixed(2)}km`);\n  return closestZone;\n};\nconst PrayerTimes = () => {\n  _s();\n  const [prayerTimes, setPrayerTimes] = useState(null);\n  const [nextPrayer, setNextPrayer] = useState(null);\n  const [selectedZone, setSelectedZone] = useState('SGR01');\n  const [loading, setLoading] = useState(true);\n  const [locationLoading, setLocationLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [usingGPS, setUsingGPS] = useState(false);\n  const [userLocation, setUserLocation] = useState(null);\n  const {\n    markPracticeCompleted,\n    markPracticeIncomplete,\n    isPracticeCompleted,\n    todayStats\n  } = usePractice();\n\n  // Get user's current location - SILENT background detection\n  const getCurrentLocation = () => {\n    return new Promise((resolve, reject) => {\n      if (!navigator.geolocation) {\n        reject(new Error('Geolocation not supported'));\n        return;\n      }\n      navigator.geolocation.getCurrentPosition(position => {\n        resolve({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          accuracy: position.coords.accuracy\n        });\n      }, error => {\n        reject(error);\n      }, {\n        enableHighAccuracy: false,\n        // Better for background detection\n        timeout: 15000,\n        maximumAge: 300000 // 5 minutes cache\n      });\n    });\n  };\n\n  // Auto-detect location on component mount - SILENT\n  const autoDetectLocation = async () => {\n    try {\n      setLocationLoading(true);\n      const location = await getCurrentLocation();\n      const zoneCode = findClosestZone(location.latitude, location.longitude);\n      setUserLocation(location);\n      setSelectedZone(zoneCode);\n      setUsingGPS(true);\n      await loadPrayerTimes(zoneCode);\n      console.log('✅ Auto-location detected:', {\n        coordinates: `${location.latitude.toFixed(4)}, ${location.longitude.toFixed(4)}`,\n        zone: zoneCode,\n        accuracy: `${Math.round(location.accuracy)}m`\n      });\n    } catch (error) {\n      console.log('❌ Auto-location failed, using default:', error);\n      // Use detected zone or fallback\n      setUsingGPS(false);\n      await loadPrayerTimes(selectedZone);\n    } finally {\n      setLocationLoading(false);\n    }\n  };\n\n  // Manual location detection - only when user explicitly clicks\n  const handleDetectLocation = async () => {\n    setLocationLoading(true);\n    try {\n      const location = await getCurrentLocation();\n      const zoneCode = findClosestZone(location.latitude, location.longitude);\n      setUserLocation(location);\n      setSelectedZone(zoneCode);\n      setUsingGPS(true);\n      await loadPrayerTimes(zoneCode);\n      setError(`📍 Location detected! Zone: ${zoneCode}`);\n      setTimeout(() => setError(null), 3000);\n    } catch (error) {\n      console.error('❌ Location detection failed:', error);\n      let errorMessage = 'Unable to detect your location. ';\n      if (error.code === error.PERMISSION_DENIED) {\n        errorMessage += 'Please allow location access in your browser settings.';\n      } else if (error.code === error.TIMEOUT) {\n        errorMessage += 'Location detection timed out.';\n      } else if (error.code === error.POSITION_UNAVAILABLE) {\n        errorMessage += 'Location information unavailable.';\n      }\n      setError(errorMessage);\n      setUsingGPS(false);\n    } finally {\n      setLocationLoading(false);\n    }\n  };\n\n  // Convert time to 12-hour format with AM/PM\n  const formatTimeTo12Hour = timeStr => {\n    if (!timeStr) return '--:--';\n\n    // If already in 12-hour format, return as is\n    if (timeStr.includes('AM') || timeStr.includes('PM')) {\n      return timeStr;\n    }\n\n    // Convert from 24-hour format to 12-hour format\n    try {\n      const [hours, minutes] = timeStr.split(':');\n      let hour = parseInt(hours);\n      const minute = minutes || '00';\n      const period = hour >= 12 ? 'PM' : 'AM';\n      hour = hour % 12 || 12; // Convert 0 to 12, 13 to 1, etc.\n\n      return `${hour}:${minute.toString().padStart(2, '0')} ${period}`;\n    } catch (error) {\n      console.error('Error formatting time:', error);\n      return timeStr;\n    }\n  };\n\n  // Fetch prayer times from backend\n  // Replace your fetchPrayerTimes function with this:\n  const fetchPrayerTimes = async zoneCode => {\n    try {\n      setError(null);\n\n      // Dynamic API URL - works on both local and mobile\n      const isLocalhost = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n      const API_BASE = isLocalhost ? 'http://localhost:5000' : 'YOUR_PRODUCTION_URL'; // You'll set this later when you deploy\n\n      const response = await fetch(`${API_BASE}/api/prayertimes/${zoneCode}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch prayer times from server');\n      }\n      const data = await response.json();\n      if (data.success && data.data) {\n        // Format all times to 12-hour format\n        const formattedTimes = {\n          fajr: formatTimeTo12Hour(data.data.fajr),\n          dhuhr: formatTimeTo12Hour(data.data.dhuhr),\n          asr: formatTimeTo12Hour(data.data.asr),\n          maghrib: formatTimeTo12Hour(data.data.maghrib),\n          isha: formatTimeTo12Hour(data.data.isha),\n          method: 'JAKIM e-solat.gov.my (Live)',\n          zone: zoneCode,\n          success: true\n        };\n        return formattedTimes;\n      } else {\n        throw new Error(data.error || 'No prayer times data received');\n      }\n    } catch (error) {\n      console.error('API Error:', error);\n\n      // Fallback: Use cached prayer times or show error\n      if (window.location.hostname !== 'localhost') {\n        setError('Prayer times unavailable. Using sample times.');\n        // Return sample prayer times as fallback\n        return getSamplePrayerTimes(zoneCode);\n      }\n      throw error;\n    }\n  };\n\n  // Add this fallback function\n  const getSamplePrayerTimes = zoneCode => {\n    return {\n      fajr: '5:45 AM',\n      dhuhr: '1:15 PM',\n      asr: '4:30 PM',\n      maghrib: '7:15 PM',\n      isha: '8:30 PM',\n      method: 'Sample Times (Backend Unavailable)',\n      zone: zoneCode,\n      success: true\n    };\n  };\n  const loadPrayerTimes = async (zoneCode = selectedZone) => {\n    setLoading(true);\n    try {\n      const times = await fetchPrayerTimes(zoneCode);\n      setPrayerTimes(times);\n      setNextPrayer(getNextPrayer(times));\n      setSelectedZone(zoneCode);\n    } catch (error) {\n      console.error('Error loading prayer times:', error);\n      setError('Unable to fetch prayer times. Please check if your backend server is running.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleZoneChange = async zoneCode => {\n    setSelectedZone(zoneCode);\n    setUsingGPS(false);\n    setUserLocation(null);\n    await loadPrayerTimes(zoneCode);\n  };\n  const handlePracticeToggle = prayerName => {\n    const prayerType = prayerName.toLowerCase();\n    if (isPracticeCompleted(prayerType)) {\n      markPracticeIncomplete(prayerType);\n    } else {\n      markPracticeCompleted(prayerType);\n    }\n  };\n\n  // Get next prayer\n  const getNextPrayer = prayerTimes => {\n    if (!prayerTimes) return null;\n    const now = new Date();\n    const prayers = [{\n      name: 'Fajr',\n      time: prayerTimes.fajr\n    }, {\n      name: 'Dhuhr',\n      time: prayerTimes.dhuhr\n    }, {\n      name: 'Asr',\n      time: prayerTimes.asr\n    }, {\n      name: 'Maghrib',\n      time: prayerTimes.maghrib\n    }, {\n      name: 'Isha',\n      time: prayerTimes.isha\n    }];\n    for (let prayer of prayers) {\n      const prayerTime = parseTimeString(prayer.time);\n      if (prayerTime > now) {\n        return {\n          name: prayer.name,\n          time: prayer.time,\n          timeObject: prayerTime\n        };\n      }\n    }\n\n    // If all prayers passed, return first prayer of next day\n    const tomorrow = new Date(now);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const fajrTime = parseTimeString(prayerTimes.fajr);\n    tomorrow.setHours(fajrTime.getHours(), fajrTime.getMinutes(), 0, 0);\n    return {\n      name: 'Fajr',\n      time: prayerTimes.fajr,\n      timeObject: tomorrow,\n      isTomorrow: true\n    };\n  };\n\n  // Helper function to parse time strings\n  const parseTimeString = timeStr => {\n    if (!timeStr) return new Date();\n    const [time, modifier] = timeStr.split(' ');\n    let [hours, minutes] = time.split(':');\n    hours = parseInt(hours);\n    minutes = parseInt(minutes);\n    if (modifier === 'PM' && hours < 12) hours += 12;\n    if (modifier === 'AM' && hours === 12) hours = 0;\n    const date = new Date();\n    date.setHours(hours, minutes, 0, 0);\n    return date;\n  };\n\n  // Auto-detect location on component mount\n  useEffect(() => {\n    autoDetectLocation();\n  }, []);\n  const prayers = [{\n    name: 'Fajr',\n    time: prayerTimes === null || prayerTimes === void 0 ? void 0 : prayerTimes.fajr,\n    icon: '🌅',\n    type: 'fajr'\n  }, {\n    name: 'Dhuhr',\n    time: prayerTimes === null || prayerTimes === void 0 ? void 0 : prayerTimes.dhuhr,\n    icon: '☀️',\n    type: 'dhuhr'\n  }, {\n    name: 'Asr',\n    time: prayerTimes === null || prayerTimes === void 0 ? void 0 : prayerTimes.asr,\n    icon: '🌇',\n    type: 'asr'\n  }, {\n    name: 'Maghrib',\n    time: prayerTimes === null || prayerTimes === void 0 ? void 0 : prayerTimes.maghrib,\n    icon: '🌆',\n    type: 'maghrib'\n  }, {\n    name: 'Isha',\n    time: prayerTimes === null || prayerTimes === void 0 ? void 0 : prayerTimes.isha,\n    icon: '🌙',\n    type: 'isha'\n  }];\n  if (loading && !prayerTimes) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        borderRadius: 3,\n        boxShadow: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          textAlign: 'center',\n          py: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mt: 2\n          },\n          children: locationLoading ? 'Auto-detecting your location...' : 'Loading prayer times...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      borderRadius: 3,\n      boxShadow: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: \"\\uD83D\\uDD4C Prayer Times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"primary.main\",\n            sx: {\n              mt: 0.5\n            },\n            children: [todayStats.prayersCompleted, \"/5 prayers completed today\", usingGPS && ' • Location Auto-detected']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            startIcon: /*#__PURE__*/_jsxDEV(MyLocation, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 26\n            }, this),\n            onClick: handleDetectLocation,\n            disabled: locationLoading,\n            variant: usingGPS ? \"contained\" : \"outlined\",\n            color: usingGPS ? \"success\" : \"primary\",\n            children: locationLoading ? 'Detecting...' : 'Refresh Location'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 26\n            }, this),\n            onClick: () => loadPrayerTimes(),\n            disabled: loading,\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: error.includes('detected') ? \"success\" : \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 11\n      }, this), usingGPS && userLocation && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(LocationOn, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this), \"Auto-detected your location\", userLocation.accuracy && ` (Accuracy: ${Math.round(userLocation.accuracy)}m)`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Zone: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedZone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Today's Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"primary.main\",\n            fontWeight: \"bold\",\n            children: [todayStats.prayersCompleted, \"/5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            height: 8,\n            backgroundColor: 'grey.200',\n            borderRadius: 4,\n            overflow: 'hidden'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: `${todayStats.progress}%`,\n              height: '100%',\n              backgroundColor: 'primary.main',\n              borderRadius: 4,\n              transition: 'width 0.3s ease'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Select Zone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedZone,\n          label: \"Select Zone\",\n          onChange: e => handleZoneChange(e.target.value),\n          disabled: loading,\n          children: malaysianZones.map(state => [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"div\",\n            sx: {\n              px: 2,\n              py: 1,\n              fontWeight: 'bold',\n              backgroundColor: 'grey.100',\n              borderBottom: '1px solid',\n              borderColor: 'divider'\n            },\n            children: state.group\n          }, state.group, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 15\n          }, this), ...state.zones.map(zone => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: zone.value,\n            sx: {\n              pl: 3\n            },\n            children: zone.label\n          }, zone.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 17\n          }, this))])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this), nextPrayer && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          p: 2,\n          borderRadius: 2,\n          mb: 3,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"\\uD83C\\uDFAF Next Prayer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          fontWeight: \"bold\",\n          children: nextPrayer.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [nextPrayer.time, nextPrayer.isTomorrow && ' (Tomorrow)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 11\n      }, this), prayerTimes && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: prayers.map(prayer => {\n          const isCompleted = isPracticeCompleted(prayer.type);\n          const isNextPrayer = (nextPrayer === null || nextPrayer === void 0 ? void 0 : nextPrayer.name) === prayer.name;\n          return /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              p: 2,\n              borderRadius: 2,\n              bgcolor: isNextPrayer ? 'action.hover' : 'transparent',\n              border: isNextPrayer ? '2px solid' : '1px solid',\n              borderColor: isNextPrayer ? 'primary.main' : 'divider',\n              opacity: isCompleted ? 0.8 : 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: prayer.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    textDecoration: isCompleted ? 'line-through' : 'none',\n                    color: isCompleted ? 'text.secondary' : 'text.primary'\n                  },\n                  children: prayer.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 714,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: prayer.time || '--:--'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [isNextPrayer && /*#__PURE__*/_jsxDEV(Chip, {\n                label: \"Next\",\n                color: \"primary\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handlePracticeToggle(prayer.type),\n                color: isCompleted ? \"success\" : \"default\",\n                sx: {\n                  border: isCompleted ? '2px solid' : '1px solid',\n                  borderColor: isCompleted ? 'success.main' : 'grey.400'\n                },\n                children: isCompleted ? /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 38\n                }, this) : /*#__PURE__*/_jsxDEV(RadioButtonUnchecked, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 56\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 19\n            }, this)]\n          }, prayer.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.secondary\",\n          children: [prayerTimes === null || prayerTimes === void 0 ? void 0 : prayerTimes.method, \" \\u2022 Zone: \", selectedZone, usingGPS && ' • GPS Auto-detection Active']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.secondary\",\n          children: \"Live data from JAKIM e-solat.gov.my \\u2022 12-hour format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 548,\n    columnNumber: 5\n  }, this);\n};\n_s(PrayerTimes, \"qDmMIWYPEQv+WLKaLmmCH03aR2U=\", false, function () {\n  return [usePractice];\n});\n_c = PrayerTimes;\nexport default PrayerTimes;\nvar _c;\n$RefreshReg$(_c, \"PrayerTimes\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","Box","Chip","Button","Select","MenuItem","FormControl","InputLabel","CircularProgress","IconButton","Alert","Refresh","CheckCircle","RadioButtonUnchecked","MyLocation","LocationOn","usePractice","jsxDEV","_jsxDEV","malaysianZones","group","zones","value","label","preciseGPSMapping","lat","lng","zone","name","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","findClosestZone","userLat","userLng","console","log","closestZone","shortestDistance","Infinity","closestLocation","location","distance","toFixed","PrayerTimes","_s","prayerTimes","setPrayerTimes","nextPrayer","setNextPrayer","selectedZone","setSelectedZone","loading","setLoading","locationLoading","setLocationLoading","error","setError","usingGPS","setUsingGPS","userLocation","setUserLocation","markPracticeCompleted","markPracticeIncomplete","isPracticeCompleted","todayStats","getCurrentLocation","Promise","resolve","reject","navigator","geolocation","Error","getCurrentPosition","position","latitude","coords","longitude","accuracy","enableHighAccuracy","timeout","maximumAge","autoDetectLocation","zoneCode","loadPrayerTimes","coordinates","round","handleDetectLocation","setTimeout","errorMessage","code","PERMISSION_DENIED","TIMEOUT","POSITION_UNAVAILABLE","formatTimeTo12Hour","timeStr","includes","hours","minutes","split","hour","parseInt","minute","period","toString","padStart","fetchPrayerTimes","isLocalhost","window","hostname","API_BASE","response","fetch","ok","data","json","success","formattedTimes","fajr","dhuhr","asr","maghrib","isha","method","getSamplePrayerTimes","times","getNextPrayer","handleZoneChange","handlePracticeToggle","prayerName","prayerType","toLowerCase","now","Date","prayers","time","prayer","prayerTime","parseTimeString","timeObject","tomorrow","setDate","getDate","fajrTime","setHours","getHours","getMinutes","isTomorrow","modifier","date","icon","type","sx","borderRadius","boxShadow","children","textAlign","py","fileName","_jsxFileName","lineNumber","columnNumber","variant","mt","display","justifyContent","alignItems","mb","gap","color","prayersCompleted","size","startIcon","onClick","disabled","severity","fontSize","fontWeight","width","height","backgroundColor","overflow","progress","transition","fullWidth","onChange","e","target","map","state","component","px","borderBottom","borderColor","pl","bgcolor","p","gutterBottom","flexDirection","isCompleted","isNextPrayer","border","opacity","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/Rashid/muslim-daily/frontend/src/components/PrayerTimes/PrayerTimes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Chip,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  CircularProgress,\r\n  IconButton,\r\n  Alert\r\n} from '@mui/material';\r\nimport { Refresh, CheckCircle, RadioButtonUnchecked, MyLocation, LocationOn } from '@mui/icons-material';\r\nimport { usePractice } from '../../context/PracticeContext';\r\n\r\n// EXACT same zones as e-solat.gov.my with optgroups\r\nconst malaysianZones = [\r\n  { group: 'Johor', zones: [\r\n    { value: 'JHR01', label: 'JHR01 - Pulau Aur dan Pulau Pemanggil' },\r\n    { value: 'JHR02', label: 'JHR02 - Johor Bahru, Kota Tinggi, Mersing, Kulai' },\r\n    { value: 'JHR03', label: 'JHR03 - Kluang, Pontian' },\r\n    { value: 'JHR04', label: 'JHR04 - Batu Pahat, Muar, Segamat, Gemas Johor, Tangkak' }\r\n  ]},\r\n  { group: 'Kedah', zones: [\r\n    { value: 'KDH01', label: 'KDH01 - Kota Setar, Kubang Pasu, Pokok Sena (Daerah Kecil)' },\r\n    { value: 'KDH02', label: 'KDH02 - Kuala Muda, Yan, Pendang' },\r\n    { value: 'KDH03', label: 'KDH03 - Padang Terap, Sik' },\r\n    { value: 'KDH04', label: 'KDH04 - Baling' },\r\n    { value: 'KDH05', label: 'KDH05 - Bandar Baharu, Kulim' },\r\n    { value: 'KDH06', label: 'KDH06 - Langkawi' },\r\n    { value: 'KDH07', label: 'KDH07 - Puncak Gunung Jerai' }\r\n  ]},\r\n  { group: 'Kelantan', zones: [\r\n    { value: 'KTN01', label: 'KTN01 - Bachok, Kota Bharu, Machang, Pasir Mas, Pasir Puteh, Tanah Merah, Tumpat, Kuala Krai, Mukim Chiku' },\r\n    { value: 'KTN02', label: 'KTN02 - Gua Musang (Daerah Galas Dan Bertam), Jeli, Jajahan Kecil Lojing' }\r\n  ]},\r\n  { group: 'Melaka', zones: [\r\n    { value: 'MLK01', label: 'MLK01 - SELURUH NEGERI MELAKA' }\r\n  ]},\r\n  { group: 'Negeri Sembilan', zones: [\r\n    { value: 'NGS01', label: 'NGS01 - Tampin, Jempol' },\r\n    { value: 'NGS02', label: 'NGS02 - Jelebu, Kuala Pilah, Rembau' },\r\n    { value: 'NGS03', label: 'NGS03 - Port Dickson, Seremban' }\r\n  ]},\r\n  { group: 'Pahang', zones: [\r\n    { value: 'PHG01', label: 'PHG01 - Pulau Tioman' },\r\n    { value: 'PHG02', label: 'PHG02 - Kuantan, Pekan, Muadzam Shah' },\r\n    { value: 'PHG03', label: 'PHG03 - Jerantut, Temerloh, Maran, Bera, Chenor, Jengka' },\r\n    { value: 'PHG04', label: 'PHG04 - Bentong, Lipis, Raub' },\r\n    { value: 'PHG05', label: 'PHG05 - Genting Sempah, Janda Baik, Bukit Tinggi' },\r\n    { value: 'PHG06', label: 'PHG06 - Cameron Highlands, Genting Higlands, Bukit Fraser' },\r\n    { value: 'PHG07', label: 'PHG07 - Zon Khas Daerah Rompin, (Mukim Rompin, Mukim Endau, Mukim Pontian)' }\r\n  ]},\r\n  { group: 'Perlis', zones: [\r\n    { value: 'PLS01', label: 'PLS01 - Kangar, Padang Besar, Arau' }\r\n  ]},\r\n  { group: 'Pulau Pinang', zones: [\r\n    { value: 'PNG01', label: 'PNG01 - Seluruh Negeri Pulau Pinang' }\r\n  ]},\r\n  { group: 'Perak', zones: [\r\n    { value: 'PRK01', label: 'PRK01 - Tapah, Slim River, Tanjung Malim' },\r\n    { value: 'PRK02', label: 'PRK02 - Kuala Kangsar, Sg. Siput , Ipoh, Batu Gajah, Kampar' },\r\n    { value: 'PRK03', label: 'PRK03 - Lenggong, Pengkalan Hulu, Grik' },\r\n    { value: 'PRK04', label: 'PRK04 - Temengor, Belum' },\r\n    { value: 'PRK05', label: 'PRK05 - Kg Gajah, Teluk Intan, Bagan Datuk, Seri Iskandar, Beruas, Parit, Lumut, Sitiawan, Pulau Pangkor' },\r\n    { value: 'PRK06', label: 'PRK06 - Selama, Taiping, Bagan Serai, Parit Buntar' },\r\n    { value: 'PRK07', label: 'PRK07 - Bukit Larut' }\r\n  ]},\r\n  { group: 'Sabah', zones: [\r\n    { value: 'SBH01', label: 'SBH01 - Bahagian Sandakan (Timur), Bukit Garam, Semawang, Temanggong, Tambisan, Bandar Sandakan, Sukau' },\r\n    { value: 'SBH02', label: 'SBH02 - Beluran, Telupid, Pinangah, Terusan, Kuamut, Bahagian Sandakan (Barat)' },\r\n    { value: 'SBH03', label: 'SBH03 - Lahad Datu, Silabukan, Kunak, Sahabat, Sempurna, Tungku, Bahagian Tawau (Timur)' },\r\n    { value: 'SBH04', label: 'SBH04 - Bandar Tawau, Balong, Merotai, Kalabakan, Bahagian Tawau (Barat)' },\r\n    { value: 'SBH05', label: 'SBH05 - Kudat, Kota Marudu, Pitas, Pulau Banggi, Bahagian Kudat' },\r\n    { value: 'SBH06', label: 'SBH06 - Gunung Kinabalu' },\r\n    { value: 'SBH07', label: 'SBH07 - Kota Kinabalu, Ranau, Kota Belud, Tuaran, Penampang, Papar, Putatan, Bahagian Pantai Barat' },\r\n    { value: 'SBH08', label: 'SBH08 - Pensiangan, Keningau, Tambunan, Nabawan, Bahagian Pendalaman (Atas)' },\r\n    { value: 'SBH09', label: 'SBH09 - Beaufort, Kuala Penyu, Sipitang, Tenom, Long Pasia, Membakut, Weston, Bahagian Pendalaman (Bawah)' }\r\n  ]},\r\n  { group: 'Selangor', zones: [\r\n    { value: 'SGR01', label: 'SGR01 - Gombak, Petaling, Sepang, Hulu Langat, Hulu Selangor, S.Alam' },\r\n    { value: 'SGR02', label: 'SGR02 - Kuala Selangor, Sabak Bernam' },\r\n    { value: 'SGR03', label: 'SGR03 - Klang, Kuala Langat' }\r\n  ]},\r\n  { group: 'Sarawak', zones: [\r\n    { value: 'SWK01', label: 'SWK01 - Limbang, Lawas, Sundar, Trusan' },\r\n    { value: 'SWK02', label: 'SWK02 - Miri, Niah, Bekenu, Sibuti, Marudi' },\r\n    { value: 'SWK03', label: 'SWK03 - Pandan, Belaga, Suai, Tatau, Sebauh, Bintulu' },\r\n    { value: 'SWK04', label: 'SWK04 - Sibu, Mukah, Dalat, Song, Igan, Oya, Balingian, Kanowit, Kapit' },\r\n    { value: 'SWK05', label: 'SWK05 - Sarikei, Matu, Julau, Rajang, Daro, Bintangor, Belawai' },\r\n    { value: 'SWK06', label: 'SWK06 - Lubok Antu, Sri Aman, Roban, Debak, Kabong, Lingga, Engkelili, Betong, Spaoh, Pusa, Saratok' },\r\n    { value: 'SWK07', label: 'SWK07 - Serian, Simunjan, Samarahan, Sebuyau, Meludam' },\r\n    { value: 'SWK08', label: 'SWK08 - Kuching, Bau, Lundu, Sematan' },\r\n    { value: 'SWK09', label: 'SWK09 - Zon Khas (Kampung Patarikan)' }\r\n  ]},\r\n  { group: 'Terengganu', zones: [\r\n    { value: 'TRG01', label: 'TRG01 - Kuala Terengganu, Marang, Kuala Nerus' },\r\n    { value: 'TRG02', label: 'TRG02 - Besut, Setiu' },\r\n    { value: 'TRG03', label: 'TRG03 - Hulu Terengganu' },\r\n    { value: 'TRG04', label: 'TRG04 - Dungun, Kemaman' }\r\n  ]},\r\n  { group: 'Wilayah Persekutuan', zones: [\r\n    { value: 'WLY01', label: 'WLY01 - Kuala Lumpur, Putrajaya' },\r\n    { value: 'WLY02', label: 'WLY02 - Labuan' }\r\n  ]}\r\n];\r\n\r\n// Comprehensive GPS mapping for ALL Malaysian zones\r\nconst preciseGPSMapping = [\r\n  // Selangor (SGR01)\r\n  { lat: 3.0497, lng: 101.5841, zone: 'SGR01', name: 'Kajang' },\r\n  { lat: 3.0733, lng: 101.5185, zone: 'SGR01', name: 'Shah Alam' },\r\n  { lat: 3.1073, lng: 101.6067, zone: 'SGR01', name: 'Petaling Jaya' },\r\n  { lat: 3.2000, lng: 101.6333, zone: 'SGR01', name: 'Kepong' },\r\n  { lat: 2.9936, lng: 101.7870, zone: 'SGR01', name: 'Cyberjaya' },\r\n  { lat: 2.9549, lng: 101.7591, zone: 'SGR01', name: 'Dengkil' },\r\n  { lat: 3.0000, lng: 101.7000, zone: 'SGR01', name: 'Putra Heights' },\r\n  \r\n  // Wilayah Persekutuan (WLY01)\r\n  { lat: 3.1390, lng: 101.6869, zone: 'WLY01', name: 'Kuala Lumpur City Center' },\r\n  { lat: 2.9264, lng: 101.6964, zone: 'WLY01', name: 'Putrajaya Center' },\r\n  { lat: 3.1586, lng: 101.7142, zone: 'WLY01', name: 'Ampang' },\r\n  { lat: 3.0833, lng: 101.6500, zone: 'WLY01', name: 'Cheras' },\r\n  \r\n  // Selangor Other Zones\r\n  { lat: 3.0449, lng: 101.4456, zone: 'SGR03', name: 'Klang' },\r\n  { lat: 2.8189, lng: 101.7250, zone: 'SGR03', name: 'Banting' },\r\n  { lat: 3.3500, lng: 101.2500, zone: 'SGR02', name: 'Kuala Selangor' },\r\n  { lat: 3.6800, lng: 101.5200, zone: 'SGR02', name: 'Bestari Jaya' },\r\n  \r\n  // Johor\r\n  { lat: 1.4927, lng: 103.7414, zone: 'JHR02', name: 'Johor Bahru' },\r\n  { lat: 1.4556, lng: 103.7611, zone: 'JHR02', name: 'Pasir Gudang' },\r\n  { lat: 1.5056, lng: 103.6578, zone: 'JHR02', name: 'Iskandar Puteri' },\r\n  { lat: 2.0333, lng: 103.3167, zone: 'JHR03', name: 'Kluang' },\r\n  { lat: 1.8500, lng: 102.9333, zone: 'JHR04', name: 'Batu Pahat' },\r\n  { lat: 2.5833, lng: 103.8333, zone: 'JHR01', name: 'Mersing' },\r\n  \r\n  // Pulau Pinang\r\n  { lat: 5.4141, lng: 100.3288, zone: 'PNG01', name: 'George Town' },\r\n  { lat: 5.3500, lng: 100.4667, zone: 'PNG01', name: 'Butterworth' },\r\n  { lat: 5.2833, lng: 100.4667, zone: 'PNG01', name: 'Bayan Lepas' },\r\n  \r\n  // Perak\r\n  { lat: 4.5975, lng: 101.0901, zone: 'PRK02', name: 'Ipoh' },\r\n  { lat: 4.8500, lng: 100.7333, zone: 'PRK06', name: 'Taiping' },\r\n  { lat: 4.7667, lng: 100.9333, zone: 'PRK05', name: 'Teluk Intan' },\r\n  { lat: 5.1167, lng: 100.4833, zone: 'PRK01', name: 'Tanjung Malim' },\r\n  \r\n  // Kelantan\r\n  { lat: 6.1254, lng: 102.2381, zone: 'KTN01', name: 'Kota Bharu' },\r\n  { lat: 5.5333, lng: 102.2000, zone: 'KTN01', name: 'Pasir Mas' },\r\n  { lat: 5.2000, lng: 102.0500, zone: 'KTN02', name: 'Gua Musang' },\r\n  \r\n  // Terengganu\r\n  { lat: 5.3296, lng: 103.1370, zone: 'TRG01', name: 'Kuala Terengganu' },\r\n  { lat: 4.2333, lng: 103.4333, zone: 'TRG04', name: 'Kemaman' },\r\n  { lat: 5.7833, lng: 102.5500, zone: 'TRG02', name: 'Besut' },\r\n  \r\n  // Pahang\r\n  { lat: 3.8167, lng: 103.3333, zone: 'PHG02', name: 'Kuantan' },\r\n  { lat: 3.4833, lng: 102.3500, zone: 'PHG03', name: 'Temerloh' },\r\n  { lat: 4.2500, lng: 102.3833, zone: 'PHG04', name: 'Bentong' },\r\n  { lat: 3.9000, lng: 101.8500, zone: 'PHG01', name: 'Genting Highlands' },\r\n  \r\n  // Melaka\r\n  { lat: 2.1896, lng: 102.2501, zone: 'MLK01', name: 'Malacca City' },\r\n  { lat: 2.2667, lng: 102.2833, zone: 'MLK01', name: 'Alor Gajah' },\r\n  { lat: 2.4333, lng: 102.2333, zone: 'MLK01', name: 'Jasin' },\r\n  \r\n  // Negeri Sembilan\r\n  { lat: 2.7259, lng: 101.9378, zone: 'NGS03', name: 'Seremban' },\r\n  { lat: 2.7167, lng: 102.2500, zone: 'NGS01', name: 'Tampin' },\r\n  { lat: 2.8833, lng: 102.2500, zone: 'NGS02', name: 'Kuala Pilah' },\r\n  \r\n  // Kedah\r\n  { lat: 6.1164, lng: 100.3667, zone: 'KDH01', name: 'Alor Setar' },\r\n  { lat: 5.6500, lng: 100.5000, zone: 'KDH02', name: 'Sungai Petani' },\r\n  { lat: 6.3167, lng: 99.8500, zone: 'KDH06', name: 'Langkawi' },\r\n  \r\n  // Perlis\r\n  { lat: 6.4333, lng: 100.2000, zone: 'PLS01', name: 'Kangar' },\r\n  \r\n  // Sabah\r\n  { lat: 5.9804, lng: 116.0735, zone: 'SBH07', name: 'Kota Kinabalu' },\r\n  { lat: 5.8333, lng: 118.1167, zone: 'SBH01', name: 'Sandakan' },\r\n  { lat: 4.2500, lng: 117.2500, zone: 'SBH03', name: 'Lahad Datu' },\r\n  { lat: 5.9167, lng: 116.8333, zone: 'SBH08', name: 'Keningau' },\r\n  \r\n  // Sarawak\r\n  { lat: 1.5397, lng: 110.3542, zone: 'SWK08', name: 'Kuching' },\r\n  { lat: 4.4143, lng: 114.0086, zone: 'SWK02', name: 'Miri' },\r\n  { lat: 2.2870, lng: 111.8307, zone: 'SWK04', name: 'Sibu' },\r\n  { lat: 3.1667, lng: 113.0333, zone: 'SWK03', name: 'Bintulu' },\r\n  \r\n  // Labuan\r\n  { lat: 5.2833, lng: 115.2333, zone: 'WLY02', name: 'Labuan' }\r\n];\r\n\r\n// Function to calculate distance between two coordinates (Haversine formula)\r\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\r\n  const R = 6371; // Earth radius in km\r\n  const dLat = (lat2 - lat1) * Math.PI / 180;\r\n  const dLon = (lon2 - lon1) * Math.PI / 180;\r\n  const a = \r\n    Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n    Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \r\n    Math.sin(dLon/2) * Math.sin(dLon/2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n  return R * c;\r\n};\r\n\r\n// Smart zone detection that works for ALL locations in Malaysia\r\nconst findClosestZone = (userLat, userLng) => {\r\n  console.log(`🔍 Finding closest zone for coordinates: ${userLat}, ${userLng}`);\r\n  \r\n  let closestZone = 'SGR01'; // Reasonable default for most populated area\r\n  let shortestDistance = Infinity;\r\n  let closestLocation = null;\r\n  \r\n  for (const location of preciseGPSMapping) {\r\n    const distance = calculateDistance(userLat, userLng, location.lat, location.lng);\r\n    \r\n    if (distance < shortestDistance) {\r\n      shortestDistance = distance;\r\n      closestZone = location.zone;\r\n      closestLocation = location.name;\r\n    }\r\n  }\r\n  \r\n  console.log(`✅ Auto-detected zone: ${closestZone} (${closestLocation}), Distance: ${shortestDistance.toFixed(2)}km`);\r\n  return closestZone;\r\n};\r\n\r\nconst PrayerTimes = () => {\r\n  const [prayerTimes, setPrayerTimes] = useState(null);\r\n  const [nextPrayer, setNextPrayer] = useState(null);\r\n  const [selectedZone, setSelectedZone] = useState('SGR01');\r\n  const [loading, setLoading] = useState(true);\r\n  const [locationLoading, setLocationLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [usingGPS, setUsingGPS] = useState(false);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  \r\n  const { markPracticeCompleted, markPracticeIncomplete, isPracticeCompleted, todayStats } = usePractice();\r\n\r\n  // Get user's current location - SILENT background detection\r\n  const getCurrentLocation = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if (!navigator.geolocation) {\r\n        reject(new Error('Geolocation not supported'));\r\n        return;\r\n      }\r\n\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          resolve({\r\n            latitude: position.coords.latitude,\r\n            longitude: position.coords.longitude,\r\n            accuracy: position.coords.accuracy\r\n          });\r\n        },\r\n        (error) => {\r\n          reject(error);\r\n        },\r\n        {\r\n          enableHighAccuracy: false, // Better for background detection\r\n          timeout: 15000,\r\n          maximumAge: 300000 // 5 minutes cache\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  // Auto-detect location on component mount - SILENT\r\n  const autoDetectLocation = async () => {\r\n    try {\r\n      setLocationLoading(true);\r\n      const location = await getCurrentLocation();\r\n      const zoneCode = findClosestZone(location.latitude, location.longitude);\r\n      \r\n      setUserLocation(location);\r\n      setSelectedZone(zoneCode);\r\n      setUsingGPS(true);\r\n      await loadPrayerTimes(zoneCode);\r\n      \r\n      console.log('✅ Auto-location detected:', {\r\n        coordinates: `${location.latitude.toFixed(4)}, ${location.longitude.toFixed(4)}`,\r\n        zone: zoneCode,\r\n        accuracy: `${Math.round(location.accuracy)}m`\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.log('❌ Auto-location failed, using default:', error);\r\n      // Use detected zone or fallback\r\n      setUsingGPS(false);\r\n      await loadPrayerTimes(selectedZone);\r\n    } finally {\r\n      setLocationLoading(false);\r\n    }\r\n  };\r\n\r\n  // Manual location detection - only when user explicitly clicks\r\n  const handleDetectLocation = async () => {\r\n    setLocationLoading(true);\r\n    try {\r\n      const location = await getCurrentLocation();\r\n      const zoneCode = findClosestZone(location.latitude, location.longitude);\r\n      \r\n      setUserLocation(location);\r\n      setSelectedZone(zoneCode);\r\n      setUsingGPS(true);\r\n      await loadPrayerTimes(zoneCode);\r\n      \r\n      setError(`📍 Location detected! Zone: ${zoneCode}`);\r\n      setTimeout(() => setError(null), 3000);\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Location detection failed:', error);\r\n      let errorMessage = 'Unable to detect your location. ';\r\n      \r\n      if (error.code === error.PERMISSION_DENIED) {\r\n        errorMessage += 'Please allow location access in your browser settings.';\r\n      } else if (error.code === error.TIMEOUT) {\r\n        errorMessage += 'Location detection timed out.';\r\n      } else if (error.code === error.POSITION_UNAVAILABLE) {\r\n        errorMessage += 'Location information unavailable.';\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setUsingGPS(false);\r\n    } finally {\r\n      setLocationLoading(false);\r\n    }\r\n  };\r\n\r\n  // Convert time to 12-hour format with AM/PM\r\n  const formatTimeTo12Hour = (timeStr) => {\r\n    if (!timeStr) return '--:--';\r\n    \r\n    // If already in 12-hour format, return as is\r\n    if (timeStr.includes('AM') || timeStr.includes('PM')) {\r\n      return timeStr;\r\n    }\r\n    \r\n    // Convert from 24-hour format to 12-hour format\r\n    try {\r\n      const [hours, minutes] = timeStr.split(':');\r\n      let hour = parseInt(hours);\r\n      const minute = minutes || '00';\r\n      \r\n      const period = hour >= 12 ? 'PM' : 'AM';\r\n      hour = hour % 12 || 12; // Convert 0 to 12, 13 to 1, etc.\r\n      \r\n      return `${hour}:${minute.toString().padStart(2, '0')} ${period}`;\r\n    } catch (error) {\r\n      console.error('Error formatting time:', error);\r\n      return timeStr;\r\n    }\r\n  };\r\n\r\n  // Fetch prayer times from backend\r\n// Replace your fetchPrayerTimes function with this:\r\nconst fetchPrayerTimes = async (zoneCode) => {\r\n  try {\r\n    setError(null);\r\n    \r\n    // Dynamic API URL - works on both local and mobile\r\n    const isLocalhost = window.location.hostname === 'localhost' || \r\n                        window.location.hostname === '127.0.0.1';\r\n    \r\n    const API_BASE = isLocalhost \r\n      ? 'http://localhost:5000' \r\n      : 'YOUR_PRODUCTION_URL'; // You'll set this later when you deploy\r\n    \r\n    const response = await fetch(`${API_BASE}/api/prayertimes/${zoneCode}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch prayer times from server');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    if (data.success && data.data) {\r\n      // Format all times to 12-hour format\r\n      const formattedTimes = {\r\n        fajr: formatTimeTo12Hour(data.data.fajr),\r\n        dhuhr: formatTimeTo12Hour(data.data.dhuhr),\r\n        asr: formatTimeTo12Hour(data.data.asr),\r\n        maghrib: formatTimeTo12Hour(data.data.maghrib),\r\n        isha: formatTimeTo12Hour(data.data.isha),\r\n        method: 'JAKIM e-solat.gov.my (Live)',\r\n        zone: zoneCode,\r\n        success: true\r\n      };\r\n      \r\n      return formattedTimes;\r\n    } else {\r\n      throw new Error(data.error || 'No prayer times data received');\r\n    }\r\n  } catch (error) {\r\n    console.error('API Error:', error);\r\n    \r\n    // Fallback: Use cached prayer times or show error\r\n    if (window.location.hostname !== 'localhost') {\r\n      setError('Prayer times unavailable. Using sample times.');\r\n      // Return sample prayer times as fallback\r\n      return getSamplePrayerTimes(zoneCode);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Add this fallback function\r\nconst getSamplePrayerTimes = (zoneCode) => {\r\n  return {\r\n    fajr: '5:45 AM',\r\n    dhuhr: '1:15 PM', \r\n    asr: '4:30 PM',\r\n    maghrib: '7:15 PM',\r\n    isha: '8:30 PM',\r\n    method: 'Sample Times (Backend Unavailable)',\r\n    zone: zoneCode,\r\n    success: true\r\n  };\r\n};\r\n\r\n  const loadPrayerTimes = async (zoneCode = selectedZone) => {\r\n    setLoading(true);\r\n    try {\r\n      const times = await fetchPrayerTimes(zoneCode);\r\n      setPrayerTimes(times);\r\n      setNextPrayer(getNextPrayer(times));\r\n      setSelectedZone(zoneCode);\r\n    } catch (error) {\r\n      console.error('Error loading prayer times:', error);\r\n      setError('Unable to fetch prayer times. Please check if your backend server is running.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleZoneChange = async (zoneCode) => {\r\n    setSelectedZone(zoneCode);\r\n    setUsingGPS(false);\r\n    setUserLocation(null);\r\n    await loadPrayerTimes(zoneCode);\r\n  };\r\n\r\n  const handlePracticeToggle = (prayerName) => {\r\n    const prayerType = prayerName.toLowerCase();\r\n    \r\n    if (isPracticeCompleted(prayerType)) {\r\n      markPracticeIncomplete(prayerType);\r\n    } else {\r\n      markPracticeCompleted(prayerType);\r\n    }\r\n  };\r\n\r\n  // Get next prayer\r\n  const getNextPrayer = (prayerTimes) => {\r\n    if (!prayerTimes) return null;\r\n    \r\n    const now = new Date();\r\n    const prayers = [\r\n      { name: 'Fajr', time: prayerTimes.fajr },\r\n      { name: 'Dhuhr', time: prayerTimes.dhuhr },\r\n      { name: 'Asr', time: prayerTimes.asr },\r\n      { name: 'Maghrib', time: prayerTimes.maghrib },\r\n      { name: 'Isha', time: prayerTimes.isha }\r\n    ];\r\n\r\n    for (let prayer of prayers) {\r\n      const prayerTime = parseTimeString(prayer.time);\r\n      \r\n      if (prayerTime > now) {\r\n        return {\r\n          name: prayer.name,\r\n          time: prayer.time,\r\n          timeObject: prayerTime\r\n        };\r\n      }\r\n    }\r\n\r\n    // If all prayers passed, return first prayer of next day\r\n    const tomorrow = new Date(now);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    const fajrTime = parseTimeString(prayerTimes.fajr);\r\n    tomorrow.setHours(fajrTime.getHours(), fajrTime.getMinutes(), 0, 0);\r\n    \r\n    return {\r\n      name: 'Fajr',\r\n      time: prayerTimes.fajr,\r\n      timeObject: tomorrow,\r\n      isTomorrow: true\r\n    };\r\n  };\r\n\r\n  // Helper function to parse time strings\r\n  const parseTimeString = (timeStr) => {\r\n    if (!timeStr) return new Date();\r\n    \r\n    const [time, modifier] = timeStr.split(' ');\r\n    let [hours, minutes] = time.split(':');\r\n    \r\n    hours = parseInt(hours);\r\n    minutes = parseInt(minutes);\r\n    \r\n    if (modifier === 'PM' && hours < 12) hours += 12;\r\n    if (modifier === 'AM' && hours === 12) hours = 0;\r\n    \r\n    const date = new Date();\r\n    date.setHours(hours, minutes, 0, 0);\r\n    return date;\r\n  };\r\n\r\n  // Auto-detect location on component mount\r\n  useEffect(() => {\r\n    autoDetectLocation();\r\n  }, []);\r\n\r\n  const prayers = [\r\n    { name: 'Fajr', time: prayerTimes?.fajr, icon: '🌅', type: 'fajr' },\r\n    { name: 'Dhuhr', time: prayerTimes?.dhuhr, icon: '☀️', type: 'dhuhr' },\r\n    { name: 'Asr', time: prayerTimes?.asr, icon: '🌇', type: 'asr' },\r\n    { name: 'Maghrib', time: prayerTimes?.maghrib, icon: '🌆', type: 'maghrib' },\r\n    { name: 'Isha', time: prayerTimes?.isha, icon: '🌙', type: 'isha' }\r\n  ];\r\n\r\n  if (loading && !prayerTimes) {\r\n    return (\r\n      <Card sx={{ borderRadius: 3, boxShadow: 3 }}>\r\n        <CardContent sx={{ textAlign: 'center', py: 4 }}>\r\n          <CircularProgress />\r\n          <Typography variant=\"body1\" sx={{ mt: 2 }}>\r\n            {locationLoading ? 'Auto-detecting your location...' : 'Loading prayer times...'}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card sx={{ borderRadius: 3, boxShadow: 3 }}>\r\n      <CardContent>\r\n        {/* Header */}\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n          <Box>\r\n            <Typography variant=\"h5\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              🕌 Prayer Times\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"primary.main\" sx={{ mt: 0.5 }}>\r\n              {todayStats.prayersCompleted}/5 prayers completed today\r\n              {usingGPS && ' • Location Auto-detected'}\r\n            </Typography>\r\n          </Box>\r\n          \r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Button\r\n              size=\"small\"\r\n              startIcon={<MyLocation />}\r\n              onClick={handleDetectLocation}\r\n              disabled={locationLoading}\r\n              variant={usingGPS ? \"contained\" : \"outlined\"}\r\n              color={usingGPS ? \"success\" : \"primary\"}\r\n            >\r\n              {locationLoading ? 'Detecting...' : 'Refresh Location'}\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              startIcon={<Refresh />}\r\n              onClick={() => loadPrayerTimes()}\r\n              disabled={loading}\r\n            >\r\n              Refresh\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n\r\n        {error && (\r\n          <Alert severity={error.includes('detected') ? \"success\" : \"error\"} sx={{ mb: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Location Info */}\r\n        {usingGPS && userLocation && (\r\n          <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n            <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <LocationOn fontSize=\"small\" />\r\n              Auto-detected your location \r\n              {userLocation.accuracy && ` (Accuracy: ${Math.round(userLocation.accuracy)}m)`}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Zone: <strong>{selectedZone}</strong>\r\n            </Typography>\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Progress Bar */}\r\n        <Box sx={{ mb: 3 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Today's Progress\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"primary.main\" fontWeight=\"bold\">\r\n              {todayStats.prayersCompleted}/5\r\n            </Typography>\r\n          </Box>\r\n          <Box sx={{ \r\n            width: '100%', \r\n            height: 8, \r\n            backgroundColor: 'grey.200', \r\n            borderRadius: 4,\r\n            overflow: 'hidden'\r\n          }}>\r\n            <Box \r\n              sx={{ \r\n                width: `${todayStats.progress}%`, \r\n                height: '100%', \r\n                backgroundColor: 'primary.main',\r\n                borderRadius: 4,\r\n                transition: 'width 0.3s ease'\r\n              }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Zone Selection */}\r\n        <FormControl fullWidth sx={{ mb: 3 }}>\r\n          <InputLabel>Select Zone</InputLabel>\r\n          <Select\r\n            value={selectedZone}\r\n            label=\"Select Zone\"\r\n            onChange={(e) => handleZoneChange(e.target.value)}\r\n            disabled={loading}\r\n          >\r\n            {malaysianZones.map((state) => [\r\n              <Typography \r\n                key={state.group} \r\n                component=\"div\" \r\n                sx={{ \r\n                  px: 2, \r\n                  py: 1, \r\n                  fontWeight: 'bold', \r\n                  backgroundColor: 'grey.100',\r\n                  borderBottom: '1px solid',\r\n                  borderColor: 'divider'\r\n                }}\r\n              >\r\n                {state.group}\r\n              </Typography>,\r\n              ...state.zones.map(zone => (\r\n                <MenuItem key={zone.value} value={zone.value} sx={{ pl: 3 }}>\r\n                  {zone.label}\r\n                </MenuItem>\r\n              ))\r\n            ])}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {/* Next Prayer */}\r\n        {nextPrayer && (\r\n          <Box sx={{ \r\n            bgcolor: 'primary.main', \r\n            color: 'white', \r\n            p: 2, \r\n            borderRadius: 2, \r\n            mb: 3,\r\n            textAlign: 'center'\r\n          }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              🎯 Next Prayer\r\n            </Typography>\r\n            <Typography variant=\"h4\" fontWeight=\"bold\">\r\n              {nextPrayer.name}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {nextPrayer.time}\r\n              {nextPrayer.isTomorrow && ' (Tomorrow)'}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n\r\n        {/* Prayer Times List */}\r\n        {prayerTimes && (\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n            {prayers.map((prayer) => {\r\n              const isCompleted = isPracticeCompleted(prayer.type);\r\n              const isNextPrayer = nextPrayer?.name === prayer.name;\r\n              \r\n              return (\r\n                <Box \r\n                  key={prayer.name}\r\n                  sx={{ \r\n                    display: 'flex', \r\n                    justifyContent: 'space-between', \r\n                    alignItems: 'center',\r\n                    p: 2,\r\n                    borderRadius: 2,\r\n                    bgcolor: isNextPrayer ? 'action.hover' : 'transparent',\r\n                    border: isNextPrayer ? '2px solid' : '1px solid',\r\n                    borderColor: isNextPrayer ? 'primary.main' : 'divider',\r\n                    opacity: isCompleted ? 0.8 : 1\r\n                  }}\r\n                >\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                    <Typography variant=\"h5\">{prayer.icon}</Typography>\r\n                    <Box>\r\n                      <Typography \r\n                        variant=\"h6\"\r\n                        sx={{ \r\n                          textDecoration: isCompleted ? 'line-through' : 'none',\r\n                          color: isCompleted ? 'text.secondary' : 'text.primary'\r\n                        }}\r\n                      >\r\n                        {prayer.name}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {prayer.time || '--:--'}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  \r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                    {isNextPrayer && (\r\n                      <Chip \r\n                        label=\"Next\" \r\n                        color=\"primary\" \r\n                        size=\"small\"\r\n                      />\r\n                    )}\r\n                    \r\n                    <IconButton\r\n                      onClick={() => handlePracticeToggle(prayer.type)}\r\n                      color={isCompleted ? \"success\" : \"default\"}\r\n                      sx={{\r\n                        border: isCompleted ? '2px solid' : '1px solid',\r\n                        borderColor: isCompleted ? 'success.main' : 'grey.400'\r\n                      }}\r\n                    >\r\n                      {isCompleted ? <CheckCircle /> : <RadioButtonUnchecked />}\r\n                    </IconButton>\r\n                  </Box>\r\n                </Box>\r\n              );\r\n            })}\r\n          </Box>\r\n        )}\r\n\r\n        {/* Footer Info */}\r\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            {prayerTimes?.method} • Zone: {selectedZone}\r\n            {usingGPS && ' • GPS Auto-detection Active'}\r\n          </Typography>\r\n          <br />\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            Live data from JAKIM e-solat.gov.my • 12-hour format\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PrayerTimes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}